[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "AGEPRO Reference Manual",
    "section": "",
    "text": "Abstract\nThis reference manual describes the updated version 4.25 AGEPRO model and software to perform stochastic age-structured projections for an exploited age-structured fish stock. The AGEPRO model can be used to quantify the probable effects of alternative harvest scenarios by multiple fleets on an age-structured population over a given time horizon. Primary outputs include the projected distribution of spawning biomass, fishing mortality, recruitment, and landings by time period. This updated version allows for multiple recruitment models to account for alternative hypotheses about recruitment dynamics and applies model-averaging to predict the distribution of realized recruitment given estimates of recruitment model probabilities. The reference manual also describes the logical structure of the projection model, including program inputs, outputs, structure and usage. This includes three examples which illustrate: a standard two-fleet projection analysis projection, a stock rebuilding projection analysis, and projections to calculate the annual catch limits that produce probabilities of exceeding an overfishing level. Although all reasonable efforts have been taken to ensure the accuracy and reliability of the AGEPRO software and data, the National Oceanic and Atmospheric Administration and the U.S. Government do not and cannot warrant the performance or results that may be obtained by using this software or data."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "Introduction",
    "section": "",
    "text": "The AGEPRO model was initially developed in 1994 to determine optimal strategies to rebuild a depleted fish stock. The model was reviewed at the May 1994 meeting of the Northeast Fisheries Science Center Methods Working Group (Brodziak and Rago. Manuscript. 1994 ; Brodziak, Rago, and Conser 1998). Subsequently, the model was applied to groundfish stocks at the 18th SARC (Northeast Fisheries Science Center [NEFSC] 1994) to evaluate Amendment 5 harvest scenarios (New England Fishery Management Council [NEFMC] 1994) and was applied again in 1995 to assist with Amendment 7 (NEFMC 1996,). The reference manual was prepared in 1997 to provide documentation and has been updated since then to describe modifications to the model and software. The current program is written in the C language to allow for dynamic array allocation and to achieve rapid processing speeds.\nThe AGEPRO program can be used to perform stochastic projections of the abundance of an exploited age-structured population over a given time horizon. The primary purpose of the AGEPRO model is to produce management strategy projections that characterize the sampling distribution of key fishery system outputs such as landings, spawning stock biomass, population age structure, and fishing mortality from one or more fleets, accounting for uncertainty in initial population estimates, future recruitment, and natural mortality (Figure 1). The acronym “AGEPRO” derives from age-structured projections, in contrast to size- or biomass-based projections for size- or biomass-structured models. The user can evaluate alternative harvest scenarios by setting quotas or fishing mortality rates in each year of the time horizon.\nThree elements of uncertainty can be included in an AGEPRO stock projection: population recruitment, distribution of initial population size, and process error for population and fishery processes. Recruitment is the primary stochastic element in the population model, where recruitment is typically defined as the number of age-0 or age-1 fish entering the modeled population at the beginning of each year in the time horizon. There are a total of fifteen stochastic recruitment models that can be used for population projection. It is also possible to simulate a deterministic recruitment trajectory (see recruitment model 3 below).\nInitial population size is the second potential element of uncertainty for population projection (Figure 1). To include this element, a distribution of initial population sizes must be calculated a priori. This is typically done using bootstrapping, Markov chain Monte Carlo simulation, or other techniques in most age-structured assessments. Alternatively, projections can be based on a single best point estimate with no uncertainty in the initial population size.\nThe third element of uncertainty is process error in population and fishery processes. The user can choose to simulate the following population and fishery processes at age through time with a multiplicative lognormal process error with mean value equal to unity and a constant coefficient of variation:\n\nNatural mortality at age\nMaturation fraction at age\nStock weight on January 1st at age\nSpawning stock weight at age\nMean population weight at age\nFishery selectivity at age\nDiscard fraction at age\nCatch weight at age\nDiscard weight at age\n\nThe simulated values of each of these processes can be stored in auxiliary data files for the purpose of documenting projection results.\n\n\n\n\nBrodziak, Jon, P. J. Rago, and Ramon Conser. 1998. “A General Approach for Making Short-Term Stochastic Projections from an Age-Structured Fisheries Assessment Model,” January. https://doi.org/10.4027/fsam.1998.52.\n\n\nBrodziak, Jon, and P. Rago. Manuscript. 1994. “A General Approach for Short-Term Stochastic Projections in Age-Structured Fisheries Assessment Models.” Manuscript. 1994.\n\n\nNEFMC. 1996,. “Amendment 7 to the Northeast Multispecies Fishery Management Plan.” Newburyport, MA.\n\n\nNew England Fishery Management Council [NEFMC]. 1994. “Amendment 5 to the Northeast Multispecies Fishery Management Plan.” Newburyport, MA.\n\n\nNortheast Fisheries Science Center [NEFSC]. 1994. “Report of the 18th Northeast Regional Stock Assessment Workshop. Stock Assessment Review Committee (SARC) Consensus Summary of Assessments.” Northeast Fisheries Science Center Reference Document ; 94-22. https://repository.library.noaa.gov/view/noaa/8551."
  },
  {
    "objectID": "01_age-struct-pop-model.html#population-abundance-survival-and-spawning-biomass",
    "href": "01_age-struct-pop-model.html#population-abundance-survival-and-spawning-biomass",
    "title": "Age Structured Population Model",
    "section": "Population Abundance, Survival, and Spawning Biomass",
    "text": "Population Abundance, Survival, and Spawning Biomass\nThe AGEPRO model calculates the number of fish alive within each age class of the population through time. Let \\(Y\\) denote the number of years in a projection where \\(t\\) indexes time for \\(t = 1,2,...Y\\). The maximum number of years in the projection is a dynamic variable specified by the user and constrained by the amount of computer memory. The minimum or youngest age class comprises the recruits and the age of recruitment is set as age-1. The oldest age class is a plus-group, which consists of all fish that are at least as old as the plus group age (\\(A\\)). The maximum number of age classes is 100, including the plus group. For each age class, the number of fish alive at the beginning of each calendar year (January 1st) is \\(N_j(t)\\) where \\(j\\) indexes age class and \\(t\\) indexes year. The number of fish in the plus group is \\(N_A(t)\\) which accounts for the number of fish that are age-\\(A\\) or older at the beginning of year \\(t\\). Given this, the population abundance at the beginning of year \\(t\\) is the vector \\(\\underline{N}(t)\\) with \\(R(t)\\) used as an alternate notation to emphasize that a recruitment submodel is needed to stochastically generate recruitment through time horizon.\n\\[\n\\underline{N}(t) = \\begin{bmatrix}\n                   R(t) \\\\\n                   N_2(t) \\\\\n                   N_3(t) \\\\\n                   \\vdots \\\\\n                   N_A(t)\n                   \\end{bmatrix}\n\\tag{1}\\]\nPopulation survival at age from year \\(t−1\\) to year \\(t\\) is calculated using instantaneous fishing and mortality rates at age. To describe annual survival through mortality, let \\(M_a(t)\\) denote the instantaneous natural mortality rate on age group \\(a\\) and let \\(F_a(t)\\) denote the instantaneous fishing mortality rate for age-\\(a\\) fish in year \\(t\\) where \\(F_a(t)\\) is the sum of fleet-specific fishing mortalities at age \\(a\\). Population size at age in year \\(t\\) for age classes indexed by \\(a = 1\\ to\\ A-1\\) is given by\n\\[\nN_a(t) = N_{a-1}(t-1)\\cdot{e^{-M_{a-1}(t-1)-F_{a-1}(t-1)}}\n\\tag{2}\\]\nSimilarly, population size at age in year \\(t\\) for the plus group of fish age-\\(A\\) and older is given by\n\\[\nN_a(t) = N_{a}(t-1)\\cdot{e^{-M_{a}(t-1)-F_{a}(t-1)}} + N_{a-1}(t-1)\\cdot{e^{-M_{a-1}(t-1)-F_{a-1}(t-1)}}\n\\tag{3}\\]\nwhere survival for the plus-group involves an age-\\(A\\) and an age-(\\(A-1\\)) component. Incoming recruitment is determined through a stochastic process that is either dependent or independent of spawning biomass in year \\(t\\) (see Stock-Recruitment Relationship).\nAnnual spawning biomass \\(B_s(t)\\) is calculated from the population size vector \\(\\underline{N}(t)\\) and total mortality rates as well as information on sexual maturity and weight at age. The age-specific natural mortality rate is \\(M_a(t)\\). To describe annual survival, let \\(F_a(t)\\) be the instantaneous fishing mortality rate for age-\\(a\\) fish in year \\(t\\) where \\(F_a(t)\\) is the sum of fleet-specific fishing mortalities at age \\(F_a(t) = \\sum\\limits_{v}F_{v,a}(t)\\). Further, let \\(P_{mature,a}(t)\\) denote the average fraction of age-\\(a\\) fish that are sexually mature in year \\(t\\) and let \\(W_{S,a}\\) denote the average spawning weight of an age-\\(a\\) fish in year \\(t\\). Last, let \\(Z_{Frac}(t)\\) denote the proportion of total mortality that occurs from January 1st to the mid-point of the spawning season in year \\(t\\). Given this, population size at the midpoint of the spawning season in year \\(t\\), \\(\\underline{N}_s(t)\\) is obtained by applying instantaneous natural and fishing mortality rates that occur prior to the spawning season to the population vector at the beginning of the year, \\(\\underline{N}(t)\\).\n\\[\n\\underline{N}_S(t) = \\begin{bmatrix}\n                      N_1(t)\\cdot e^{-Z_{Frac}(t)[M_1(t) + F_r(t)]} \\\\\n                      N_2(t)\\cdot e^{-Z_{Frac}(t)[M_2(t) + F_2(t)]} \\\\\n                      N_3(t)\\cdot e^{-Z_{Frac}(t)[M_3(t) + F_3(t)]} \\\\\n                      \\vdots \\\\\n                      N_A(t)\\cdot e^{-Z_{Frac}(t)[M_A(t) + F_A(t)]}\n                      \\end{bmatrix}\n\\tag{4}\\]\nAs a result, the amount of spawning biomass in year \\(t\\) is the sum of the weight of the mature fish alive at the midpoint of the spawning season\n\\[\nB_S(t) = \\sum_{a=1}^{A}W_{S,a}(t) \\cdot P_{mature,a}(t) \\cdot N_a(t) \\cdot e^{-Z_{Frac}(t)[M_a(t) + F_a(t)]}\n\\tag{5}\\]"
  },
  {
    "objectID": "table1_AGEPRO-variables.html",
    "href": "table1_AGEPRO-variables.html",
    "title": "Table 1: Glossary of AGEPRO variables",
    "section": "",
    "text": "Table 1: Glossary of variables in the AGEPRO module.\n\n\n\n\n\n\nVariable\nDescription\n\n\n\n\n\\(A\\)\nAge of plus-group (fish age-\\(A\\) and older) and last index value for \\(\\underline{N}\\)\n\n\n\\(B_S(t)\\)\nSpawning biomass in year \\(t\\)\n\n\n\\(\\overline{B}(t)\\)\nMean stock biomass in year \\(t\\)\n\n\n\\(B_T\\)\nTotal stock biomass on January \\(1^{st}\\) of year \\(t\\)\n\n\n\\(B\\)\nNumber of input initial population vectors \\(\\underline{N}(t)\\)\n\n\n\\(C_a(t)\\)\nTotal catch number of age-\\(a\\) fish that are caught in year \\(t\\)\n\n\n\\(C_{v,a}(t)\\)\nNumber of age-\\(a\\) fish caught by fleet \\(v\\) in year \\(t\\)\n\n\n\\(D(t)\\)\nTotal weight of fish discarded fish in year \\(t\\)\n\n\n\\(F(t)\\)\nInstantaneous fully-selected fishing mortality rate in year \\(t\\)\n\n\n\\(F_a(t)\\)\nTotal fishing mortality rate for age-\\(a\\) fish in year \\(t\\)\n\n\n\\(F_{v,a}(t)\\)\nFishing mortality rate on age-\\(a\\) fish by fleet \\(v\\) in year \\(t\\)\n\n\n\\(F_B\\)\nInstantaneous fishing mortality weighted by mean biomass in year \\(t\\)\n\n\n\\(I(t)\\)\nHarvest index for year \\(t\\).\n\nIf the harvest index has value \\(I(t)=1\\), then fishery harvest is based on a specified landings quota \\(Q(t) \\ge 0\\) with catch units of metric tons\nElse if \\(I(t) = 0\\), then fishery harvest is based on an instantaneous fishing mortality rate \\(F(t) \\ge 0\\)\n\n\n\n\\(L(t)\\)\nTotal weight of fish landed in year \\(t\\)\n\n\n\\(M_a(t)\\)\nInstantaneous natural mortality rate of age-\\(a\\) fish in year \\(t\\)\n\n\n\\(N_a(t)\\)\nNumber of age-\\(a\\) fish alive on January 1st of year \\(t\\)\n\n\n\\(N_M\\)\nNumber of recruitment models used in the projection\n\n\n\\(P_{v,D,a}(t)\\)\nProportion of age-\\(a\\) fish caught and discarded in year \\(t\\)\n\n\n\\(S_{v,a}(t)\\)\nFishery selectivity for age-\\(a\\) fish by fleet \\(v\\) in year \\(t\\)\n\n\n\\(P_{R,i}(t)\\)\nProbability that the \\(i^{th}\\) recruitment model is applied in year \\(t\\)\n\n\n\\(P_{mature,a}(t)\\)\nProportion of age-\\(a\\) fish that are sexually mature in year \\(t\\)\n\n\n\\(Z_{Frac}(t)\\)\nProportion of total mortality occurring prior to spawning in year \\(t\\)\n\n\n\\(Q_v(t)\\)\nLandings quota (mt) for fleet \\(v\\) in year \\(t\\)\n\n\n\\(R(t)\\)\nRecruitment (number of age-1 fish on January \\(1^{st}\\)) in year \\(t\\)\n\n\n\\(W_{P,a}(t)\\)\nAverage population weight of an age-\\(a\\) fish on January \\(1^{st}\\) in year \\(t\\)\n\n\n\\(W_{v,L,a}(t)\\)\nAverage landed (catch) weight of age of an age-\\(a\\) fish by fleet \\(v\\) in year \\(t\\)\n\n\n\\(W_{S,a}(t)\\)\nAverage spawning weight of an age-\\(a\\) fish in year \\(t\\)\n\n\n\\(W_{midyear,a}(t)\\)\nAverage mid-year, or mean population weight of an age-\\(a\\) fish in year \\(t\\)\n\n\n\\(W_{v,D,a}(t)\\)\nAverage weight of an age-\\(a\\) fish discarded by fleet-\\(v\\) in year \\(t\\)\n\n\n\\(Y\\)\nNumber of Years in projection time horizon where \\(t= 1,2,...,Y\\)"
  },
  {
    "objectID": "02_catch-landings-discards.html",
    "href": "02_catch-landings-discards.html",
    "title": "Catch, Landings, and Discards",
    "section": "",
    "text": "The fishery catch depends on the fraction of the population that is vulnerable to harvest or the exploitable stock size. Catch at age by fleet (fleets are indexed by \\(v\\)) is determined by the Baranov catch equation (e.g., Quinn II and Deriso 1999). The catch of age-\\(a\\) fish in year \\(t\\) by fleet \\(v\\) is \\(C_{V,a}(t)\\) .\n\\[\nC_{V,a}(t)= \\frac{F_{v,a}(t)}{M_a(t)+F_{v,a}(t)}{\\Bigl[ 1-e^{-M_a(t)-F_{v,a}(t)}\\Bigr]} \\cdot N_a(t)\n\\tag{1}\\]\nTo account for age-specific discarding of fish, let \\(P_{v,D,a}(t)\\) be the proportion of age-\\(a\\) fish that are discarded by fleet \\(v\\) in year \\(t\\), and let \\(W_{v,L,a}(t)\\) and \\(W_{v,D,a}\\) be the average weight at age-\\(a\\) in year \\(t\\) for landed and discarded fish, respectively. Then, if discarding is included in the projections, the total landed weight of fish caught by fleet \\(v\\) in year \\(t\\), denoted by \\(L_v(t)\\), is\n\\[\nL_V(t)=\\sum_{a=1}^{A} \\cdot {\\Bigl[ 1 - P_{v,D,a}(t) \\Bigr]} \\cdot W_{v,L,a(t)}\n\\tag{2}\\]\nSimilarly, the total weight of discarded fish in year \\(t\\), denoted by \\(D_y(t)\\), is\n\\[\n  D_v(t) = \\sum_{a=1}^{A}C_{v,a}(t) \\cdot P_{v,D,a}(t) \\cdot W_{v,D,a}(t)\n\\tag{3}\\]\n\n\n\n\nQuinn II, Terrance J, and Richard B Deriso. 1999. Quantitative Fish Dynamics. Oxford University PressNew York, NY. https://doi.org/10.1093/oso/9780195076318.001.0001."
  },
  {
    "objectID": "03_pop-harvest.html",
    "href": "03_pop-harvest.html",
    "title": "Population Harvest",
    "section": "",
    "text": "Population harvest is set in each year in the projection time horizon by setting the harvest index \\(I(t)\\). There are two options for determining the level of population harvest in each year of the time horizon: these are the fishing mortality and the quota options. Note that catch quotas are input in units of metric tons of annual catch biomass. Under the fishing mortality option, the user-input fishing mortality rate determines the harvest level (i.e., effort-based management). Under the quota option, the user-input landings quota sets the harvest level (i.e., catch-based management). These two harvest options can be combined in any order within a given projection time horizon where, for example, effort-based management is applied in some years and quota-based management in the other years. This mixed harvest option allows the projection to start with one or more years of known catch followed by annual harvests set by fishing mortality rates. In this case, the user sets a binary harvest index \\(I(t)\\) to determine the harvest option for each year in the projection time horizon. If \\(I(t)=1\\), or the quota indicator is set to be true, then quota-based harvest control is applied in year t; else if \\(I(t)=0\\), then the quota indicator is set to be false and fishing mortality-based harvest control is applied. A mixture of quotas and effort-based harvest can be useful when projecting forward from a previous assessment to the present when only catch is available for the intervening years.\nWhen effort-based management is applied, catch at age is determined by setting \\(F_{v,a(t)}\\) by fleet for each age class. In this case, the fishing mortality rate on age-\\(a\\) fish in year \\(t\\) is the product of the fully-selected fishing mortality rate by fleet, denoted by \\(F_v(t)\\), and the fleet- and age-specific fishery selectivity of age-\\(a\\) fish, denoted by \\(S_{v,a}(t)\\) as\n\\[\nF_{v,a}(t) = F_v(t) \\cdot S_{v,a}(t)\n\\tag{1}\\]\nLandings and discards, if applicable, are then determined from \\(F_{v,a}(t)\\). When quota-based management is applied, however, the \\(F_v(t)\\) that would yield the landings quota must be determined numerically.\nUnder quota-based management, the landings quota by fleet in year \\(t\\), denoted by \\(Q_y(t)\\), will translate into a variety of effective fishing mortality rates depending on population size, fishery selectivity, and discarding, if applicable.\nIgnoring the fleet index and time dimension for simplicity, a landings quota \\(Q\\) can be expressed as a function of \\(F, Q=L(F)\\), where \\(F\\) is the fully-selected fishing mortality and \\(L\\) is the landings expressed as a function of \\(F\\). To see this result, observe that the catch of age-\\(a\\) fish can be expressed as a function of \\(F\\)\n\\[\nC_a(F) = \\frac{F \\cdot S_a(t)}{M_a(t)+F \\cdot S_a(t)}{\\Bigl[ 1 - e^{-M_a(t)-F \\cdot S_a(t)}\\Bigr]} \\cdot N_a(t)\n\\tag{2}\\]\nAs a result, landings can also be expressed as a function of \\(F\\) \\[\nL(F) = \\sum_{a=1}^{A}C_a(F) \\cdot {\\Bigl[ 1-P_{D,a}(t) \\Bigr]} \\cdot W_{L,a}(t)\n\\tag{3}\\]\nThe fully-selected fishing mortality, which satisfies the equation, \\(Q=L(F)\\) can be found using a robust root-finding algorithm and we apply the bisection method, that previous versions applied Newton’s method. Quotas which exceed the exploitable biomass of the population are defined as being infeasible and simulations with infeasible quotas are also infeasible."
  },
  {
    "objectID": "04_initial-pop-abundance.html",
    "href": "04_initial-pop-abundance.html",
    "title": "Initial Population Abundance",
    "section": "",
    "text": "There are two ways to set the initial population abundance, defined as the vector of the absolute number of fish alive on January 1st of the first year (\\(t=1\\)) of the projection time horizon \\(\\underline{N}(1)\\). The primary option is to use a set of samples from the distribution of the estimator of \\(\\underline{N}(1)\\). This approach explicitly incorporates uncertainty in the estimate of initial population abundance into the projections. Under this option, either frequentist methods such as bootstrapping or Bayesian methods such as Markov Chain Monte Carlo simulation can be applied to determine the sampling distribution of the estimator of \\(\\underline{N}(1)\\). The secondary option is to ignore uncertainty in the estimator of initial population abundance and use a single best estimate for the value of \\(\\underline{N}(1)\\). In this case, there is no uncertainty in the point estimate of \\(\\underline{N}(1)\\) used in the projections.\nThe primary option uses a set of \\(B\\) initial population vectors, denoted by \\(\\underline{N}^{(*)}(1) = \\left\\{ \\underline{N}^{(1)}(1), \\underline{N}^{(2)}(1), \\dots , \\underline{N}^{(B)}(1) \\right\\}\\) for stochastic projections. In this case, the set of B values are random samples from the distribution of the estimator of \\(\\underline{N}(1)\\) generated by the assessment model or other means. Given this, stochastic projection can be used to characterize the sampling distribution of key fishery outputs accounting for the uncertainty in the estimate of the initial population size. For each initial condition \\(\\underline{N}^{(b)}(1)\\), a set of simulations will be performed using the specified harvest strategy. Since dynamic array allocation is used to dimension the set of initial population vectors, the user may choose to input a large number of initial population vectors (e.g., \\(B=10^3\\)) within the practical constraint of available computer memory.\nThe secondary option is to use a single point estimate of \\(\\underline{N}(1)\\)for projection. In this case, one estimate of population abundance is assumed to characterize the initial state of the population. Since there is no uncertainty in the initial state of the population this option allows one to characterize the sampling distribution of key fishery outputs due to uncertainty in recruitment or other variables subject to process errors.\nRegardless of which initial population abundance option is used, the user must also specify the units of the initial population size vector taken from the assessment model. In particular, the initial population abundance vector is specified and input in relative abundance units along with a conversion coefficient \\(k_N\\) to compute from relative units to absolute numbers, where the initial population abundance replicate is calculated as the conversion coefficient times the relative abundance vector via \\(\\underline{N}^{(b)}(1) = {\\Bigl( N_1^{(b)}(1),\\  ...,\\ N_A^{(b)}(1) \\Bigr)} = k_{N} \\cdot \\underline{n}^{(b)}(1) = {\\Bigl(k_N \\cdot n_1^{(b)}(1),\\ ...,\\ k_N \\cdot n_A^{(b)}(1) \\Bigr)}\\)"
  },
  {
    "objectID": "05_retroadjust.html",
    "href": "05_retroadjust.html",
    "title": "Retrospective Adjustment",
    "section": "",
    "text": "One can adjust the initial population numbers at age vector \\(\\underline{N}(1)\\) to reflect a retrospective pattern in calculating these estimates. In this case, the user must determine an appropriate vector of retrospective bias-correction coefficients, denoted by \\(\\underline{C}\\), to apply to the vector \\(\\underline{N}(1)\\). These multiplicative bias-correction coefficients may be age-specific or constant across age classes. The bias-corrected initial population vector \\(\\underline{N}^*(1)\\) is calculated from the element-wise product of \\(\\underline{N}(1)\\) and \\(\\underline{C}\\) as\n\\[\n\\underline{N}^*(1) = {\\bigl( C_1 \\cdot N_1(1), \\ \\dots,\\  C_a \\cdot N_a(1),\\ \\dots,\\ C_A \\cdot N_A(1) \\bigr)^T}\n\\]\nNote that the bias-correction coefficients are applied to all initial population vectors. If the bias-correction coefficients are determined to be constant across age classes then \\(\\underline{C} = (C, C, ..., C)^T\\) and the bias-corrected initial population vector is\n\\[\n\\underline{N}^*(1) = {\\bigl( C \\cdot N_1(1), \\ \\dots,\\  C \\cdot N_a(1),\\ \\dots,\\ C \\cdot N_A(1) \\bigr)^T}\\ =\\ C \\cdot\\underline{N}(1)\n\\]\nThe bias-correction coefficients are only applied in the first time period of the projection time horizon to reflect uncertainty in the estimated population size at age. Mohn (1999) provides an informative presentation of the retrospective problem in sequential population analysis.\n\n\n\n\nMohn, R. 1999. “The Retrospective Problem in Sequential Population Analysis: An Investigation Using Cod Fishery and Simulated Data.” ICES Journal of Marine Science 56 (4): 473–88. https://doi.org/10.1006/jmsc.1999.0481."
  },
  {
    "objectID": "06_stock-recruit-relationship.html#model-1.-markov-matrix",
    "href": "06_stock-recruit-relationship.html#model-1.-markov-matrix",
    "title": "Stock Recruitment Relationship",
    "section": "Model 1. Markov Matrix",
    "text": "Model 1. Markov Matrix\nA Markov matrix approach to modeling recruitment may be useful when there is uncertainty about the functional form of the stock-recruitment relationship. A Markov matrix contains transition probabilities that define the probability of obtaining a given level of recruitment given that \\(B_S\\) was within a defined interval range. In particular, the distribution of recruitment is assumed to follow a multinomial distribution conditioned on the spawning biomass interval or spawning state of the stock. The Markov matrix model depends on spawning biomass and is time-invariant.\nAn empirical approach to estimate a Markov matrix uses stock-recruitment data to determine the parameters of a multinomial distribution for each spawning biomass state. In this case, matrix elements can be empirically determined by counting the number of times that a recruitment observation interval lies within a given spawning biomass state, defined by an interval of spawning biomass, and normalizing over all spawning states. To do this, assume that there are \\(K\\) recruitment values and \\(J\\) spawning biomass states. The spawning biomass states are defined by disjoint intervals on the spawning biomass axis\n\\[\nI_1 = {\\bigl[0,B_{s,1}\\bigr)}\\ and\\ for\\ j=1, ..., J-2\\ \\ I_j = {\\bigl[B_{S,j-1},B_{S,J}\\bigr)}\\ and\\ I_j = {\\bigl[B_{S,J-1}, \\infty\\bigr)}    \n\\tag{14}\\label{eq:14}\n\\]\nwhere the spawning biomass values \\(B_{S,j}\\) are the input endpoints of the disjoint intervals of categories of spawning biomass (e.g., high, medium, low). Note that the spawning biomass intervals are defined by the cut points \\(B_{S,j}\\). The conditional probability of realizing the \\(k^{th}\\) recruitment value given that observed spawning biomass \\(B_{S,Observed}\\) is in the \\(j^{th}\\) interval is \\(P{j,k}\\). Here \\(P_{j,k}\\) is the element in the \\(j^{th}\\) row and \\(k^{th}\\) column of the Markov matrix \\(\\underline{P}={\\bigl[ P_{j,k}\\bigr]}\\) of conditional recruitment probabilities with elements\n\\[\nP_{j,k} = Pr{\\bigl(R_k | B_{S,Observed} \\in I_j\\bigr)} \\tag{15}\\label{eq:15}\n\\]\nThese individual conditional probabilities can be estimated by the computing the number of points in the stock recruitment data set that fall within a selected recruitment \\([O_{k-1},O_k]\\) range conditioned on the spawning biomass interval \\(I_j\\). If \\(x_{j,k}\\) represents the number of stock-recruitment observations in cell \\(I_j \\times O_k\\) and there is at least one observation in spawning state \\(j\\), then the empirical maximum likelihood estimate of \\(P_{j,k}\\) is\n\\[\n\\Pr(r=O_k\\ |\\ B_S \\in I_j)= \\frac{x_{j,k}}{ \\sum\\limits_{k}x_{j,k} } \\tag{16}\\label{eq:16}\n\\] Here \\(P_{j,k} \\ge 0\\) and \\(\\sum\\limits_{k=1}P_{j,k}=1\\)\nUp to 25 recruitment values and up to 10 spawning biomass states can be used in the Markov matrix model. For each spawning biomass interval, the user needs to specify the conditional probabilities of realizing the expected recruitment level, e.g., the \\(P_{j,k}\\). Given the conditional probabilities \\(P_{j,k}\\), simulated values of \\(\\hat{R}\\) are generated by randomly sampling the conditional distribution \\(\\hat{R}(t) = Pr(R=O_k\\ |\\ B_S(t) \\in I_j)\\) through time."
  },
  {
    "objectID": "06_stock-recruit-relationship.html#model-2.-empirical-recruits-per-spawning-biomass-distribution",
    "href": "06_stock-recruit-relationship.html#model-2.-empirical-recruits-per-spawning-biomass-distribution",
    "title": "Stock Recruitment Relationship",
    "section": "Model 2. Empirical Recruits Per Spawning Biomass Distribution",
    "text": "Model 2. Empirical Recruits Per Spawning Biomass Distribution\nFor some stocks, the distribution of recruits per spawner may be independent of the number of spawners over the range of observed data. The recruitment per spawning biomass \\((R/B_s)\\) model randomly generates recruitment under the assumption that the distribution of the \\(R/B_s\\) ratio is stationary and independent of stock size. The empirical recruits per spawning biomass distribution model depends on spawning biomass and is time-invariant.\nTo describe this nonparametric approach, let \\(S_t\\) be the \\(R/B_s\\) ratio for the tth stock recruitment data point assuming age-1 recruitment\n\\[\nS-t = \\frac{R(t)}{B_s(t-1)} \\tag{17}\\label{eq:17}\n\\]\nand let \\(R_S\\) be the thS element in the ordered set of \\(S_t\\). The empirical probability density function for \\(R_S\\), denoted as \\(g(R_S)\\), assigns a probability of \\(1/T\\) to each value of \\(R/B_S\\) where \\(T\\) is the number of stock-recruitment data points. Let \\(G(R_S)\\) denote the cumulative distribution function (cdf) for \\(R_S\\). Set the values of \\(G\\) at the minimum and maximum observed \\(R_S\\) to be \\(G(R_{min}) = 0\\) and \\(G(R_{max}) = 0\\) so that the cdf of \\(R_S\\) can be written as\n\\[\nG(R_S) = \\frac{s-1}{T-1} \\tag{18}\\label{eq:18}\n\\]\nRandom values of \\(R_S\\) can be generated by applying the probability integral transform to the empirical cdf. To do this, let \\(U\\) be a uniformly distributed random variable on the interval [0,1]. The value of \\(R_S\\) corresponding to a randomly chosen value of \\(U\\) is determined by applying the inverse function of the cdf \\(G(R_S)\\). In particular, if \\(U\\) is an integer multiple of \\(1/(T-1)\\) so that \\(U=s/(T-1)\\) then \\(R_S = G^{-1}(U)\\). Otherwise \\(R_S\\) can be obtained by linear interpolation when \\(U\\) is not a multiple of \\(1/(T-1)\\).\nIn particular, if \\((s-1)/(T-1)&lt;U&lt;s/(T-1)\\), then \\(\\hat{R_S}\\) is interpolated between \\(R_S\\) and \\(R_{S+1}\\) as\n\\[\nU = \\left(\\frac{\\dfrac{s}{T-1} - \\dfrac{s-1}{T-1}}{R_{s+1}-R_S} \\right) (\\widehat{R_S} - R_S) + \\frac{s-1}{T-1} \\tag{19}\\label{eq:19}\n\\]\nSolving for \\(\\widehat{R_S}\\) as a function of \\(U\\) yields\n\\[\n\\widehat{R_S} - (T - 1)(R_{S+1} - R_S)\\left(U - \\frac{s-1}{T-1}\\right) + R_{S}\\ \\tag{20}\\label{eq:20}\n\\]\nWhere the interpolation index s is determined as the greatest integer in \\(1+U(T-1)\\). Given the value of \\(\\widehat{R_S}\\), recruitment is generated as\n\\[\nR(t) = N_1(t) = B_S(t-1) \\cdot \\widehat{R_S} \\tag{21}\\label{eq:21}\n\\]\nThe AGEPRO program can generate stochastic recruitments under model 2 based on thousands of input stock-recruitment data points (i.e., the stock-recruitment data array size is defined as a long int variable in the C language and is user specified with the input variable MaxRecObs, see Table 3, keyword RECRUIT) conditioned on available computer memory resources."
  },
  {
    "objectID": "06_stock-recruit-relationship.html#model-3.-empirical-recruitment-distribution",
    "href": "06_stock-recruit-relationship.html#model-3.-empirical-recruitment-distribution",
    "title": "Stock Recruitment Relationship",
    "section": "Model 3. Empirical Recruitment Distribution",
    "text": "Model 3. Empirical Recruitment Distribution\nAnother simple model for generating recruitment is to draw randomly from the observed set of recruitments \\(\\underline{R}= \\bigl\\{ R(1), R(2), ..., R(T) \\bigr\\}\\) .This may be a useful approach when the recruitment has randomly fluctuated about its mean and appears to beindependent of spawning biomass over the observed range of data. In this case, the recruitment distribution may be modeled as a multinomial random variable where the probability of randomly choosing a particular recruitment is \\(1 / T\\) given \\(T\\) observed recruitments. The empirical recruitment distribution model does not depend on spawning biomass and is time-invariant.\nIn this model, realized recruitment \\(\\hat{R}\\) is simulated from the empirical recruitment distribution as\n\\[\nPr\\left(\\widehat{R}=R(t)\\right) = \\frac{1}{T}, for\\ t \\in \\{1,2,...,T\\} \\tag{22}\\label{eq:22}\n\\] The empirical recruitment distribution approach is nonparametric and assumes that future recruitment is totally independent of spawning stock biomass. When current levels of \\(B_S\\) are near the midrange of historical values this assumption seems reasonable. However, if contemporary \\(S_B\\) values are near the bottom of the range, then this approach could be overly optimistic, for it assumes that all historicallyobserved recruitment levels are possible, regardless of \\(B_S\\). The AGEPRO program can generate stochastic recruitments under model 3 based on thousands of input recruitment data points. Note that the empirical recruitment distribution model can be used to make deterministic projections by specifying a single observed recruitment."
  },
  {
    "objectID": "06_stock-recruit-relationship.html#model-4.-two-stage-empricial-recruits-per-spwaning-biomass",
    "href": "06_stock-recruit-relationship.html#model-4.-two-stage-empricial-recruits-per-spwaning-biomass",
    "title": "Stock Recruitment Relationship",
    "section": "Model 4. Two-Stage Empricial Recruits Per Spwaning Biomass",
    "text": "Model 4. Two-Stage Empricial Recruits Per Spwaning Biomass\nThe two-stage recruits per spawning biomass model is a direct generalization of the \\(R/B_S\\) model where the spawning stock of the population is categorized into “low” and “high” states. The two-stage empirical recruits per spawning biomass distribution model depends on spawning biomass and is time-invariant.\nIn this model, there is an \\(R/B_S\\) distribution for the low spawning biomass state and an \\(R/B_S\\) distribution for the high spawning biomass state. Let \\(G_{Low}\\) be the cdf and let \\(T_Low\\) be the number of \\(R/B_S\\) values for the low \\(B_S\\) state. Similarly, let \\(G_{High}\\) be the cdf and let \\(T_{High}\\) be the number of \\(R/B_S\\) values for the high \\(B_S\\) state. Further, let \\(B^*_S\\) B denote the cutoff level of \\(B_S\\) such that, if \\(B_S &gt; B^*_S\\), then \\(B_S\\) falls in the high state. Conversely if \\(B_S &lt;B^*_S\\), then \\(B_S\\) falls in the low state. Recruitment is stochastically generated from \\(G_{Low}\\) or \\(G_{High}\\) using equations (\\(\\ref{eq:20}\\)) and (\\(\\ref{eq:21}\\)) dependent on the \\(B_S\\) state. The AGEPRO program can generate stochastic recruitments under model 4 based on thousands of input stock recruitment data points per \\(B_S\\) state."
  },
  {
    "objectID": "06_stock-recruit-relationship.html#model-5.-beverton-holt-curve-with-lognormal-error",
    "href": "06_stock-recruit-relationship.html#model-5.-beverton-holt-curve-with-lognormal-error",
    "title": "Stock Recruitment Relationship",
    "section": "Model 5. Beverton-Holt Curve with Lognormal Error",
    "text": "Model 5. Beverton-Holt Curve with Lognormal Error\nThe Beverton-Holt curve (Beverton and Holt 1957) with lognormal errors is a parametric model of recruitment generation where survival to recruitment age is density dependent and subject to stochastic variation. The Beverton-Holt curve with lognormal error model depends on spawning biomass and is time-invariant.\nThe Beverton-Holt curve with lognormal error generates recruitment as\n\\[\n\\begin{split}\n\\hat{r}(t) &= \\frac{\\alpha \\cdot b_s (t-1)}{\\beta + b_s (t-1)} \\cdot e^w\\ \\\\\n  & where\\ w ~ \\sim N \\bigl(0, \\sigma_{w}^2\\bigr), \\widehat{R}(t)= c_R \\cdot \\widehat{r}(t), and\\ B_S(t) = c_{B}\\cdot b_S(t) \\\\\n\\end{split}\n\\tag{23}\\label{eq:23}\n\\]\nThe stock-recruitment parameters \\(\\alpha\\), \\(\\beta\\), and \\(\\sigma_w^2\\) and the conversion coefficients for recruitment \\(c_R\\) and spawning stock biomass \\(c_B\\) are specified by the user. Here it is assumed that the parameter estimates for the Beverton-Holt curve have been estimated in relative units of recruitment \\(r(t)\\) and spawning biomass \\(b_s(t)\\), which are converted to absolute values using the conversion coefficients. Note that the absolute value of recruitment is expressed as numbers of fish, while for spawning biomass, the absolute value is expressed as kilograms of \\(B_S\\). For example, if the stock-recruitment curve was estimated with stock-recruitment data that were measured in millions of fish and thousands of metric tons of \\(B_S\\), then \\(c_R=10^6\\) and \\(c_R=10^6\\). It may be important to estimate the parameters of the stock-recruitment curve in relative units to reduce the potential effects of roundoff error on parameter estimates. It is important to note that the expected value of the lognormal error term is not unity but is \\(exp\\left(\\dfrac{1}{2}\\sigma_w^2\\right)\\). Therefore, in order to generate a recruitment model that has a lognormal error term that is equal to 1, one needs to multiply the parameter \\(\\alpha\\) by \\(exp\\left(-\\dfrac{1}{2}\\sigma_w^2\\right)\\). This bias correction applies when the lognormal error used to fit the Beverton-Holt curve has a log-scale error term \\(w\\) with zero mean.\nThe Beverton-Holt curve is often reparameterized in a modified form with parameters for steepness \\(h\\) , unfished recruitment \\(R_0\\), and unfished spawning biomass \\(B_0\\). The modified Beverton-Holt curve produces \\(h=R_0\\) recruits when \\(B_S = 0.2B_0\\) and has the form\n\\[\n\\hat{R} = \\frac{4hR_0B_S}{B_0(1-h)+B_S(5h-1)} \\tag{24}\\label{eq:24}\n\\]\nThe parameters \\(\\alpha\\) and \\(\\beta\\) can be expressed as functions of the parameters of the modified Beverton-Holt curve as\n\\[\n\\alpha = \\frac{4hR_0}{5h-1} = 4B_0\\frac{h}{\\left(\\dfrac{B_0}{R_0}\\right)(5h-1)} \\tag{25}\\label{eq:25}\n\\] and \\[\n\\beta = \\frac{B_0(1-h)}{(5h-1)} - \\frac{\\alpha \\left(\\dfrac{B_0}{R_0}\\right)(h^{-1}-1)}{4} \\tag{26}\\label{eq:26}\n\\] Thus, parameter estimates for the modified curve can be used to determine the Beverton-Holt parameters for the AGEPRO program."
  },
  {
    "objectID": "06_stock-recruit-relationship.html#model-6.-ricker-curve-with-lognormal-error",
    "href": "06_stock-recruit-relationship.html#model-6.-ricker-curve-with-lognormal-error",
    "title": "Stock Recruitment Relationship",
    "section": "Model 6. Ricker Curve with Lognormal Error",
    "text": "Model 6. Ricker Curve with Lognormal Error\nThe Ricker curve (Ricker 1954) with lognormal error is a parametric model of recruitment generation where survival to recruitment age is density dependent and subject to stochastic variation. The Ricker curve with lognormal error model depends on spawning biomass and is time invariant.\nThe Ricker curve with lognormal error generates recruitment as\n\\[\n\\begin{split}\n&\\hat{r}(t) = \\alpha \\cdot b_S(t-1) \\cdot e^{-\\beta \\cdot b_S(t-1)}\\ \\cdot e^w \\\\\n& where\\ w \\sim N(0,\\sigma_w^2), \\hat{R}(t) =  c_R \\cdot \\hat{r}(t),\\ and\\ B_S(t) = c_B \\cdot b_S (t)\n\\end{split}\n\\tag{27}\\label{eq:27}\n\\]\nThe stock-recruitment parameters \\(\\alpha\\), \\(\\beta\\), and \\(\\sigma_w^2\\) and the conversion coefficients for recruitment \\(C_R\\) and spawning stock biomass \\(c_B\\) are specified by the user. Here it is assumed that the parameter estimates for the Beverton-Holt curve have been estimated in relative units of recruitment \\(r(t)\\) and spawning biomass \\(b_s(t)\\) which are converted to absolute values using the conversion coefficients. It is important to note that the expected value of the lognormal error term is not unity but is \\(exp\\left(\\dfrac{1}{2}\\sigma^2_w\\right)\\). To generate a recruitment model that has a lognormal error term that is equal to 1, premultiply the parameter \\(\\alpha\\) by \\(exp\\left(-\\dfrac{1}{2}\\sigma^2_w\\right)\\); this mean correction applies when the lognormal error used to fit the Ricker curve has a log-scale error term \\(w\\) with zero mean."
  },
  {
    "objectID": "06_stock-recruit-relationship.html#model-7.-shepherd-curve-with-lognormal-error",
    "href": "06_stock-recruit-relationship.html#model-7.-shepherd-curve-with-lognormal-error",
    "title": "Stock Recruitment Relationship",
    "section": "Model 7. Shepherd Curve with Lognormal Error",
    "text": "Model 7. Shepherd Curve with Lognormal Error\nThe Shepherd curve (Shepherd 1982) with lognormal error is a parametric model of recruitment generation where survival to recruitment age is density dependent and subject to stochastic variation. The Shepherd curve with lognormal error model depends on spawning biomass and is time-invariant.\nThe Shepherd curve with lognormal error generates recruitment as\n\\[\n\\begin{split}\n&\\hat{r}(t) = \\dfrac{\\alpha \\cdot b_S(t-1)}{ 1 + \\left( \\dfrac{b_s(t-1)}{k} \\right)^{\\beta} } \\cdot e^w \\\\\n&\\\\\n& where\\ w \\sim N(0,\\sigma_w^2), \\hat{R}(t) =  c_R \\cdot \\hat{r}(t),\\ and\\ B_S(t) = c_B \\cdot b_S (t)\n\\end{split}\n\\tag{28}\\label{eq:28}\n\\]\nThe stock-recruitment parameters \\(\\alpha\\), \\(\\beta\\), \\(k\\), and \\(\\sigma^2_w\\) and the conversion coefficients for recruitment \\(c_R\\) and spawning stock biomass \\(c_B\\) are specified by the user. Here it is assumed that the parameter estimates for the Beverton-Holt curve have been estimated in relative units of recruitment \\(r(t)\\) and spawning biomass \\(b_S(t)\\) which are converted to absolute values using the conversion coefficients. It is important to note that the expected value of the lognormal error term is not unity but is \\(exp\\left(\\dfrac{1}{2}\\sigma^2_w\\right)\\). To generate a recruitment model that has a lognormal error term that is equal to 1, premultiply the parameter \\(\\alpha\\) by \\(exp\\left(-\\dfrac{1}{2}\\sigma^2_w\\right)\\); this mean correction applies when the lognormal error used to fit the Ricker curve has a log-scale error term w with zero mean."
  },
  {
    "objectID": "06_stock-recruit-relationship.html#model-8.-lognormal-distribution",
    "href": "06_stock-recruit-relationship.html#model-8.-lognormal-distribution",
    "title": "Stock Recruitment Relationship",
    "section": "Model 8. Lognormal Distribution",
    "text": "Model 8. Lognormal Distribution\nThe lognormal distribution provides a parametric model for stochastic recruitment generation. The lognormal distribution model does not depend on spawning biomass and is time-invariant.\nThe lognormal distribution generates recruitment as\n\\[\n\\begin{split}\n& \\hat{r}(t) = e^w \\\\\n& \\\\\n& where\\ w \\sim N (\\mu_{log(r)},\\sigma^2_{log(r)})\\ and \\ \\hat{R}(t) = c_R \\cdot \\hat{r}(t)\n\\end{split}\n\\tag{29}\\label{eq:29}\n\\]\nThe lognormal distribution parameters \\(\\mu_{log(r)}\\) and \\(\\sigma^2_{log(r)}\\) as well as the conversion coefficient for recruitment \\(C_R\\) are specified by the user. It is assumed that the parameters of the lognormal distribution have been estimated in relative units \\(r(t)\\) and then converted to absolute values with the conversion coefficients."
  },
  {
    "objectID": "06_stock-recruit-relationship.html#model-9.-deprecated-time-varying-empirical-recruitment-distribution",
    "href": "06_stock-recruit-relationship.html#model-9.-deprecated-time-varying-empirical-recruitment-distribution",
    "title": "Stock Recruitment Relationship",
    "section": "Model 9. [DEPRECATED] Time-Varying Empirical Recruitment Distribution",
    "text": "Model 9. [DEPRECATED] Time-Varying Empirical Recruitment Distribution\nThis recruitment model has been deprecated. The model for a time-varying empirical recruitment distribution can be fully implemented using model 3."
  },
  {
    "objectID": "06_stock-recruit-relationship.html#model-10.-beverton-holt-curve-with-autocorrelated-lognormal-error",
    "href": "06_stock-recruit-relationship.html#model-10.-beverton-holt-curve-with-autocorrelated-lognormal-error",
    "title": "Stock Recruitment Relationship",
    "section": "Model 10. Beverton-Holt Curve with Autocorrelated Lognormal Error",
    "text": "Model 10. Beverton-Holt Curve with Autocorrelated Lognormal Error\nThe Beverton-Holt curve with autocorrelated lognormal errors is a parametric model of recruitment generation where survival to recruitment age is density dependent and subject to serially-correlated stochastic variation. The Beverton-Holt curve with autocorrelated lognormal error model depends on spawning biomass and is time-dependent.\nThe Beverton-Holt curve with autocorrelated lognormal error generates recruitment as\n\\[\n\\begin{split}\n\\hat{r}(t) &= \\frac{\\alpha \\cdot b_s (t-1)}{\\beta + b_s (t-1)} \\cdot e^{\\varepsilon_t} \\\\\n& where\\ \\varepsilon_t = \\phi\\varepsilon_{t-1} + w_t \\ \\ with\\ w_t \\sim  N(0,\\sigma^2_w), \\\\\n& \\hat{R}(t) = c_r \\cdot \\hat{r}(t), and\\ B_s(t) = c_B \\cdot b_S(t)\n\\end{split}\n\\tag{30}\\label{eq:30}\n\\]\nThe stock-recruitment parameters \\(\\alpha\\), \\(\\beta\\), \\(\\phi\\), \\(\\varepsilon_0\\), and \\(\\sigma^2_w\\) and the conversion coefficients for recruitment \\(c_R\\) and spawning stock biomass \\(c_B\\) are specified by the user. The parameter \\(\\varepsilon_0\\) is the log-scale residual for the stock-recruitment fit in the time prior to the projection. If this value is not known, the default is to set \\(\\varepsilon_0 = 0\\)."
  },
  {
    "objectID": "06_stock-recruit-relationship.html#model-11.-ricker-curve-with-autocorrelated-lognormal-error",
    "href": "06_stock-recruit-relationship.html#model-11.-ricker-curve-with-autocorrelated-lognormal-error",
    "title": "Stock Recruitment Relationship",
    "section": "Model 11. Ricker Curve with Autocorrelated Lognormal Error",
    "text": "Model 11. Ricker Curve with Autocorrelated Lognormal Error\nThe Ricker curve with autocorrelated lognormal error is a parametric model of recruitment generation where survival to recruitment age is density dependent and subject to serially correlated stochastic variation. The Ricker curve with autocorrelated lognormal error model depends on spawning biomass and is time-dependent.\nThe Ricker curve with autocorrelated lognormal error generates recruitment as\n\\[\n\\begin{split}\n\\hat{r}(t) &= \\alpha \\cdot b_S(t-1) \\cdot e^{-\\beta\\cdot b_S(t-1)} \\cdot e^{\\varepsilon_t} \\\\\n& where\\ \\varepsilon_t = \\phi\\varepsilon_{t-1} + w_t \\ \\ with\\ w_t \\sim  N(0,\\sigma^2_w), \\\\\n& \\hat{R}(t) = c_r \\cdot \\hat{r}(t), and\\ B_s(t) = c_B \\cdot b_S(t)\n\\end{split}\n\\tag{31}\\label{eq:31}\n\\] The stock-recruitment parameters \\(\\alpha\\), \\(\\beta\\), \\(\\phi\\), \\(\\varepsilon_0\\), and \\(\\sigma^2_w\\) and the conversion coefficients for recruitment \\(c_R\\) and spawning stock biomass \\(c_B\\) are specified by the user. The parameter \\(\\varepsilon_0\\) is the log-scale residual for the stock-recruitment fit in the time prior to the projection. If this value is not known, the default is to set \\(\\varepsilon_0 = 0\\)."
  },
  {
    "objectID": "06_stock-recruit-relationship.html#model-12.-shepherd-curve-with-autocorrelated-lognormal-error",
    "href": "06_stock-recruit-relationship.html#model-12.-shepherd-curve-with-autocorrelated-lognormal-error",
    "title": "Stock Recruitment Relationship",
    "section": "Model 12. Shepherd Curve with Autocorrelated Lognormal Error",
    "text": "Model 12. Shepherd Curve with Autocorrelated Lognormal Error\nThe Shepherd curve with autocorrelated lognormal error is a parametric model of recruitment generation where survival to recruitment age is density dependent and subject to serially-correlated stochastic variation. The Shepherd curve with autocorrelated lognormal error model depends on spawning biomass and is time-dependent.\nThe Shepherd curve with autocorrelated lognormal error generates recruitment as\n\\[\n\\begin{split}\n& \\hat{r}(t) = \\dfrac{\\alpha \\cdot b_S(t-1)}{ 1 + \\left( \\dfrac{b_s(t-1)}{k} \\right)^{\\beta} } \\cdot e^{\\varepsilon_t} \\\\\n& \\\\\n& where\\ \\varepsilon_t = \\phi\\varepsilon_{t-1} + w_t \\ \\ with\\ w_t \\sim  N(0,\\sigma^2_w), \\\\\n& \\hat{R}(t) = c_r \\cdot \\hat{r}(t), and\\ B_s(t) = c_B \\cdot b_S(t)\n\\end{split}\n\\tag{32}\\label{eq:32}\n\\] The stock-recruitment parameters \\(\\alpha\\), \\(\\beta\\), \\(k\\), \\(\\phi\\), \\(\\varepsilon_0\\), and \\(\\sigma^2_w\\) and the conversion coefficients for recruitment \\(c_R\\) and spawning stock biomass \\(c_B\\) are specified by the user. The parameter \\(\\varepsilon_0\\) is the log-scale residual for the stock-recruitment fit in the time prior to the projection. If this value is not known, the default is to set \\(\\varepsilon_0 = 0\\)."
  },
  {
    "objectID": "06_stock-recruit-relationship.html#model-13.-autocorrelated-lognormal-distribution",
    "href": "06_stock-recruit-relationship.html#model-13.-autocorrelated-lognormal-distribution",
    "title": "Stock Recruitment Relationship",
    "section": "Model 13. Autocorrelated Lognormal Distribution",
    "text": "Model 13. Autocorrelated Lognormal Distribution\nThe autocorrelated lognormal distribution provides a parametric model for stochastic recruitment generation with serial correlation. The autocorrelated lognormal distribution model does not depend on spawning biomass and is time-dependent.\nThe autocorrelated lognormal distribution is\n\\[\n\\begin{split}\n& n_r(t) = e^{s_t}\\\\\n& \\\\\n& where\\ \\varepsilon_t = \\phi\\varepsilon_{t-1} + w_t \\ with \\ w_t \\sim N \\left(\\mu_{log(r)} \\cdot \\sigma^2_{log(r)}\\right) \\\\\n& and\\ R(t) = c_R \\cdot n_r(t)\n\\end{split}\n\\tag{33}\\label{eq:33}\n\\]\nThe lognormal distribution parameters \\(\\mu_{log(r)} \\cdot \\sigma^2_{log(r)}\\),\\(\\phi\\), \\(\\varepsilon_0\\) as well as the conversion coefficient for recruitment \\(C_R\\) are specified by the user. It is assumed that the parameters of the lognormal distribution have been estimated in relative units \\(r(t)\\) and then converted to absolute values with the conversion coefficient."
  },
  {
    "objectID": "06_stock-recruit-relationship.html#model-14.-empirical-cumulative-distribution-function-of-recruitment",
    "href": "06_stock-recruit-relationship.html#model-14.-empirical-cumulative-distribution-function-of-recruitment",
    "title": "Stock Recruitment Relationship",
    "section": "Model 14. Empirical Cumulative Distribution Function of Recruitment",
    "text": "Model 14. Empirical Cumulative Distribution Function of Recruitment\nThe empirical cumulative distribution function of recruitment can be used to randomly generates recruitment under the assumption that the distribution of \\(R\\) is stationary and independent of stock size. The empirical cumulative distribution function of recruitment model does not depend on spawning biomass and is time-invariant.\nTo describe this nonparametric approach, let \\(R_S\\) denote the \\(S^{th}\\) element in the ordered set of observed recruitment values. The empirical probability density function for \\(R_S\\), denoted as \\(g(R_s)\\), assigns a probability of \\(1/T\\) to each value of \\(R(t)\\) where \\(T\\) is the number of stock-recruitment data points. Let \\(G(R_S)\\) denote the cumulative distribution function (cdf) for \\(R_S\\). Set the values of \\(G\\) at the minimum and maximum observed \\(R_S\\) to be \\(G(R_{min})=0\\) and \\(G(R_{max})=0\\) so that the cdf of \\(R_S\\) can be written as\n\\[\nG(R_S) = \\frac{s-1}{T-1} \\tag{34}\\label{eq:34}\n\\]\nRandom values of \\(R_S\\) can be generated by applying the probability integral transform to the empirical cdf. To do this, let \\(U\\) be a uniformly distributed random variable on the interval [0,1]. The value of \\(R_S\\) corresponding to a randomly chosen value of \\(U\\) is determined by applying the inverse function of the cdf \\(G(R_S)\\). In particular, if \\(U\\) is an integer multiple of \\(1/(T-1)\\) so that \\(U = s/(T-1)\\) then \\(\\widehat{R_s} = G^{-1}(U)\\). Otherwise \\(\\widehat{R_s}\\) can be obtained by linear interpolation when \\(U\\) is not a multiple of \\(1/(T-1)\\).\nIn particular, if \\((s-1) / (T-1) &lt; U &lt; s/ (T-1)\\), then \\(\\widehat{R_s}\\) is interpolated between \\(R_S\\) and \\(R_{S+1}\\) as\n\\[\nU = \\left(\\frac{\\dfrac{s}{T-1}-\\dfrac{s-1}{T-1}}{R_{S+1} - R_S} \\right)\\left(\\widehat{R_S}-R_S\\right) + \\frac{s-1}{T-1}\n\\tag{35}\\label{eq:35}\n\\]\nSolving for \\(\\widehat{R_s}\\) as a function of \\(U\\) yields\n\\[\n\\widehat{R_S} = (T-1)(R_{S+1}-R_S)\\left(U-\\frac{s-1}{T-1}\\right)+R_S \\tag{36}\\label{eq:36}\n\\]\nwhere the interpolation index \\(s\\) is determined as the greatest integer in \\(1+U(T-1)\\). Given the value of \\(R_S\\), recruitment is set to be\n\\[\n\\widehat{R}(t) = \\widehat{R_S} \\tag{37}\\label{eq:37}\n\\] The AGEPRO program can generate stochastic recruitments under model 14 based on thousands of input recruitment data points."
  },
  {
    "objectID": "06_stock-recruit-relationship.html#model-15.-two-stage-empirical-cumulative-distribution-function-of-recruitment",
    "href": "06_stock-recruit-relationship.html#model-15.-two-stage-empirical-cumulative-distribution-function-of-recruitment",
    "title": "Stock Recruitment Relationship",
    "section": "Model 15. Two Stage Empirical Cumulative Distribution Function of Recruitment",
    "text": "Model 15. Two Stage Empirical Cumulative Distribution Function of Recruitment\nThe two-stage empirical cumulative distribution function of recruitment model is an extension of Model 14 where the spawning stock of the population is categorized into low and high states. The two-stage empirical cumulative distribution function of recruitment model depends on spawning biomass and is time-invariant.\nIn this model, there is an empirical recruitment distribution \\(R_{Low}\\) for the low spawning biomass state and an empirical recruitment distribution \\(R_{High}\\) for the high spawning biomass state. Let \\(G_{Low}\\) be the cdf and let \\(T_{Low}\\) be the number of \\(R\\) values for the low \\(B_S\\) state. Similarly, let \\(G_{High}\\) be the cdf and let \\(T_{High}\\) be the number of \\(R\\) values for the high \\(B_S\\) state. Further, let \\(B_S^*\\) denote the cutoff level of \\(B_S\\) such that, if \\(B_S &gt; B_S^*\\), then \\(B_S\\) falls in the high state. Conversely if \\(B_S &lt; B_S^*\\), then \\(B_S\\) falls in the low state. Recruitment is stochastically generated from \\(G_{Low}\\) or \\(G_{High}\\) using equations (\\(\\ref{eq:36}\\)) and (\\(\\ref{eq:37}\\)) dependent on the \\(B_S\\) state. The AGEPRO program can generate stochastic recruitments under model 15 based on thousands of input stock-recruitment data points per \\(B_S\\) state."
  },
  {
    "objectID": "06_stock-recruit-relationship.html#model-16.-linear-recruits-per-spawning-biomass-predictor-with-normal-error",
    "href": "06_stock-recruit-relationship.html#model-16.-linear-recruits-per-spawning-biomass-predictor-with-normal-error",
    "title": "Stock Recruitment Relationship",
    "section": "Model 16. Linear Recruits Per Spawning Biomass Predictor with Normal Error",
    "text": "Model 16. Linear Recruits Per Spawning Biomass Predictor with Normal Error\nThe linear recruits per spawning biomass predictor with normal error is a parametric model to simulate random values of recruits per spawning biomass \\(\\dfrac{R}{B_S}\\) and realized recruitment values. The predictors in the linear model \\(X_p(t)\\) can be any continuous variable and may typically be survey indices of cohort abundance or environmental covariates that are correlated with recruitment strength. Input values of each predictor are required for each time period. If a value of a predictor is missing or not known for one or more periods, the missing values can be imputed using appropriate measures of central tendency, e.g., mean or median values. Similarly, if this model has zero probability in a given time period (e.g., is not a member of the set of probable models), then dummy values can be input for each predictor. For each time period and simulation, a random value of \\(\\dfrac{R}{B_S}\\) is generated using the linear model\n\\[\n\\dfrac{R}{B_S} = \\beta_0 + \\sum^{N_P}_{p=1}\\beta_p\\ \\cdot X_p(t) + \\varepsilon \\tag{38}\\label{eq:38}\n\\]\nwhere \\(N_p\\) is the number of predictors, \\(\\beta_0\\) is the intercept, \\(\\beta_p\\) is the linear coefficient of the \\(p^{th}\\) predictor and \\(\\varepsilon\\) is a normal distribution with zero mean and constant variance \\(\\sigma^2\\). It is possible negative values of \\(\\dfrac{R}{B_S}\\) to be generated using this formulation; such values are excluded from the set of simulated values of \\(\\dfrac{R}{B_S}\\) from equation (\\(\\ref{eq:35}\\)) by testing if \\(\\dfrac{R}{B_S} &lt; 0\\) repeating the random sampling until an feasible positive value of \\(\\dfrac{R}{B_S}\\) is obtained. This model randomly generates \\(\\dfrac{R}{B_S}\\) values under the assumption that the linear predictor of the \\(\\dfrac{R}{B_S}\\) ratio is stationary and independent of stock size. Random values of \\(\\dfrac{R}{B_S}\\) are multiplied by realized spawning biomass to generate recruitment in each time period. The linear recruits per spawning biomass predictor with normal error depends on spawning biomass and is time-invariant unless time is used as a predictor."
  },
  {
    "objectID": "06_stock-recruit-relationship.html#model-17.-loglinear-recruits-per-spawning-biomass-predictor-with-lognormal-error",
    "href": "06_stock-recruit-relationship.html#model-17.-loglinear-recruits-per-spawning-biomass-predictor-with-lognormal-error",
    "title": "Stock Recruitment Relationship",
    "section": "Model 17. Loglinear Recruits Per Spawning Biomass Predictor with Lognormal Error",
    "text": "Model 17. Loglinear Recruits Per Spawning Biomass Predictor with Lognormal Error\nThe loglinear recruits per spawning biomass predictor with lognormal error is a parametric model to simulate random values of recruits per spawning biomass \\(\\dfrac{R}{B_S}\\) and associated random recruitments. Predictors for the loglinear model \\(X_p(t)\\) can be any continuous variable and could include survey indices of cohort abundance or environmental covariates that are correlated with recruitment strength. Input values of each predictor are required for each time period. If a value of a predictor is missing or not known for one or more periods, the missing values can be imputed using appropriate measures of central tendency, e.g., mean or median values. If this model has zero probability in a given time period (e.g., is not a member of the set of probable models), then dummy values can be input for each predictor. For each time period and simulation, a random value of the natural logarithm of \\(\\dfrac{R}{B_S}\\) is generated using the loglinear model\n\\[\n\\log \\left(\\dfrac{R}{B_s}\\right) = \\beta_0 + \\sum\\limits_{p=1}^{N_p} \\beta_p\\ \\cdot X_p(t) + \\varepsilon \\tag{39}\\label{eq:39}\n\\]\nwhere \\(N_P\\) is the number of predictors, \\(\\beta_0\\) is the intercept, \\(\\beta_p\\) is the linear coefficient of the \\(p^{th}\\) predictor and \\(\\varepsilon\\) is a normal distribution with constant variance \\(\\sigma^2\\) and mean equal to \\(-0.5\\sigma^2\\). In this case, the mean of \\(\\varepsilon\\) implies that the expected value of the lognormal error term is unity. This model generates positive random values of \\(\\dfrac{R}{B_S}\\) under the assumption that the linear predictor of the \\(\\dfrac{R}{B_S}\\) ratio is stationary and independent of stock size. Simulated values of \\(\\dfrac{R}{B_S}\\) are multiplied by realized spawning biomass to generate recruitment in each time period. The loglinear recruits per spawning biomass predictor with lognormal error depends on spawning biomass and is time-invariant unless time is used as a predictor."
  },
  {
    "objectID": "06_stock-recruit-relationship.html#model-18.-linear-recruitment-predictor-with-normal-error",
    "href": "06_stock-recruit-relationship.html#model-18.-linear-recruitment-predictor-with-normal-error",
    "title": "Stock Recruitment Relationship",
    "section": "Model 18. Linear Recruitment Predictor with Normal Error",
    "text": "Model 18. Linear Recruitment Predictor with Normal Error\nThe linear recruitment predictor with normal error is a parametric model to simulate representative random values of recruitment. The predictors in the linear model \\(X_p(t)\\) can be any continuous variable and could represent survey indices of cohort abundance or environmental covariates correlated with recruitment strength. Input values of each predictor are required for each time period. If a value of a predictor is missing or not known for one or more periods, the missing values can be imputed using appropriate measures of central tendency, e.g., mean or median values. Similarly, if this model has zero probability in a given time period (e.g., is not a member of the set of probable models), then dummy values can be input for each predictor. For each time period and simulation, a random value of R is generated using the linear model\n\\[\n\\begin{split}\n& n_r(t) = \\beta_0+\\sum\\limits_{p=1}^{N_p}\\beta_p\\ \\cdot X_p(t) + \\varepsilon\\\\\n& with \\ R(t) = c_r \\cdot n_r(t)\\\\\n\\end{split}\n\\tag{40}\\label{eq:40}\n\\]\nhere \\(N_p\\) is the number of predictors, \\(\\beta_0\\) is the intercept, \\(\\beta_p\\) is the linear coefficient of the \\(p^{th}\\) predictor and \\(\\varepsilon\\) is a normal distribution with zero mean and constant variance \\(\\sigma^2\\) and the conversion coefficients for recruitment is \\(c_R\\). It is possible that negative values of \\(R\\) can be generated using this formulation; such values are excluded from the set of simulated values of \\(R\\) from equation (\\(\\ref{eq:37}\\)) by testing if \\(R\\) repeating the random sampling until an feasible positive value of \\(R\\) is obtained. This model randomly generates \\(R\\) values under the assumption that the linear predictor of \\(R\\) is stationary and independent of stock size. The linear recruitment predictor with normal error does not depend on spawning biomass and is time-invariant unless time is used as a predictor."
  },
  {
    "objectID": "06_stock-recruit-relationship.html#model-19.-loglinear-recruitment-predictor-with-lognormal-error",
    "href": "06_stock-recruit-relationship.html#model-19.-loglinear-recruitment-predictor-with-lognormal-error",
    "title": "Stock Recruitment Relationship",
    "section": "Model 19. Loglinear Recruitment Predictor with Lognormal Error",
    "text": "Model 19. Loglinear Recruitment Predictor with Lognormal Error\nThe loglinear recruitment predictor with lognormal error is a parametric model to simulate random values of recruitment R. Predictors for the loglinear model \\(X_p(t)\\) can be any continuous variable such as survey indices of cohort abundance or environmental covariates that are correlated with recruitment strength. Input values of each predictor are required for each time period. If a value of a predictor is missing or not known for one or more periods, the missing values can be imputed using appropriate measures of central tendency, e.g., mean or median values. If this model has zero probability in a given time period (e.g., is not a member of the set of probable models), then dummy values can be input for each predictor. For each time period and simulation, a random value of the natural logarithm of \\(R\\) is generated using the loglinear model\n\\[\n\\begin{split}\n& \\log{(n_r(t))} = \\beta_0+\\sum\\limits_{p=1}^{N_p}\\beta_p\\ \\cdot X_p(t) + \\varepsilon\\\\\n& with \\ R(t) = c_r \\cdot n_r(t)\\\\\n\\end{split}\n\\tag{41}\\label{eq:41}\n\\] here \\(N_p\\) is the number of predictors, \\(\\beta_0\\) is the intercept, \\(\\beta_p\\) is the linear coefficient of the \\(p^{th}\\) predictor and \\(\\varepsilon\\) is a normal distribution with constant variance \\(\\sigma^2\\) and and mean equal to \\(-0.5\\sigma^2\\), and the conversion coefficients for recruitment is \\(c_R\\). In this case, the mean of \\(\\varepsilon\\) implies that the expected value if the lognormal error term is unity. This model generates positive random values of \\(R\\) under the assumption that the linear predictor of \\(R\\) is stationary and independent of stock size. The loglinear recruitment predictor with lognormal error does not depend on spawning biomass and is time-invariant unless time is used as a predictor."
  },
  {
    "objectID": "06_stock-recruit-relationship.html#model-20.-fixed-recruitment",
    "href": "06_stock-recruit-relationship.html#model-20.-fixed-recruitment",
    "title": "Stock Recruitment Relationship",
    "section": "Model 20. Fixed Recruitment",
    "text": "Model 20. Fixed Recruitment\nThe fixed recruitment predictor applies a specified value of recruitment for each year of the time horizon. The vector of input recruitment values in relative units is \\(\\underline{n}_r = \\Big[ n_r(1), n_r(2, ..., n_r(Y)\\Big]\\) for projections years \\(1\\) through \\(Y\\). The fixed recruitment model predicts recruitment as\n\\[\nR(t) = c_r \\cdot n_r(t) \\tag{42}\\label{eq:42}\n\\]\nwhere the conversion coefficient for input recruitment to absolute numbers is \\(c_R\\). The fixed recruitment model does not depend on spawning biomass and is time-invariant."
  },
  {
    "objectID": "06_stock-recruit-relationship.html#model-21.-empirical-cumulative-distribution-function-of-recruitment-with-linear-decline-to-zero",
    "href": "06_stock-recruit-relationship.html#model-21.-empirical-cumulative-distribution-function-of-recruitment-with-linear-decline-to-zero",
    "title": "Stock Recruitment Relationship",
    "section": "Model 21. Empirical Cumulative Distribution Function of Recruitment with Linear Decline to Zero",
    "text": "Model 21. Empirical Cumulative Distribution Function of Recruitment with Linear Decline to Zero\nThe empirical cumulative distribution function of recruitment with linear decline to zero model is an extension of the empirical cumulative distribution function of recruitment (Model 14) in which recruitment strength declines when the spawning stock biomass falls below a threshold \\(B^*_S\\). The decline in recruitment randomly generated from the empirical cdf of the observed recruitment is proportional to the ratio of current spawning stock biomass to the threshold \\(\\dfrac{B_S}{B^*_S}\\) when \\(B_S &lt; B^*_S\\). In particular, predicted recruitment values are randomly generated using equation (\\(\\ref{eq:37}\\)) given the input time series of observed recruitment. That is, if the current spawning biomass is at or above the threshold with \\(B_S \\ge B^*_S\\) then the predicted recruitment is\n\\[\nR = c_R \\cdot \\left[ (T-1)(R_{S+1} - R_S)\\left( U-\\dfrac{s-1}{T-1}\\right)+R_S\\ \\right] \\tag{43}\\label{eq:43}\n\\]\nwhere the conversion coefficient for input recruitment to absolute numbers is \\(c_R\\).\nOtherwise, if the current spawning biomass falls below the threshold with \\(B_S &lt; B^*_S\\) then the predicted recruitment is reduced to be\n\\[\nR = c_R \\cdot \\frac{B_S}{B^*_S} \\left[\\ (T-1)(R_{S+1} - R_S)\\left( U-\\dfrac{s-1}{T-1}\\right)+R_S\\ \\right] \\tag{44}\\label{eq:44}\n\\]\nwhere the conversion coefficient for input recruitment to absolute numbers is \\(c_R\\). The empirical cumulative distribution function of recruitment with linear decline to zero model depends on spawning biomass and is time-invariant.\n\n\n\n\nBeverton, Raymond J. H., and Sidney J. Holt. 1957. On the Dynamics of Exploited Fish Populations. Chapman; Hall, London. Facsmile Reprint. Springer Netherlands. 1993. https://doi.org/10.1007/978-94-011-2106-4.\n\n\nQuinn II, Terrance J, and Richard B Deriso. 1999. Quantitative Fish Dynamics. Oxford University PressNew York, NY. https://doi.org/10.1093/oso/9780195076318.001.0001.\n\n\nRicker, W. E. 1954. “Stock and Recruitment.” Journal of the Fisheries Research Board of Canada 11 (5): 559–623. https://doi.org/10.1139/f54-039.\n\n\nShepherd, J. G. 1982. “A Versatile New Stock-Recruitment Relationship for Fisheries, and the Construction of Sustainable Yield Curves.” ICES Journal of Marine Science 40 (1): 67–75. https://doi.org/10.1093/icesjms/40.1.67."
  },
  {
    "objectID": "07_recruit-probabilities.html",
    "href": "07_recruit-probabilities.html",
    "title": "Recruitment Model Probabilities",
    "section": "",
    "text": "Model uncertainty about the appropriate stock-recruitment model can be directly incorporated into AGEPRO projections. Using a set of recruitment models may be appropriate when each model provides a similar statistical fit to a set of stock-recruitment data, where similarity can be measured using Akaike information criterion, deviance information criterion, widely applicable information criterion, or other goodness-of-fit measures. Given a measure of a stock-recruitment model’s relative likelihood compared to a set of alternative models, one can use information criteria to calculate an individual model’s probability of best representing the true state of nature. Alternatively, one can assign model probabilities based on judgment of other measures of goodness of fit or use the principle of indifference to assign equal probabilities in the absence of compelling information.\nRegardless of the approach used to estimate them, the recruitment model probabilities are used to generate stochastic recruitment dynamics in a straightforward manner. Suppose there are a total of \\(N_M\\) probable recruitment models, as determined by the user. The probability that recruitment model m is realized in year \\(t\\) is denoted by \\(P_{R,m}(t) &gt; 0\\). Conservation of total probability implies that the sum of model probabilities over the set of probable models in each year is unity\n\\[\n\\sum\\limits^{N_M}_{m=1} P_{R,m}(t) = 1 \\tag{45}\\label{eq:45}\n\\]\nThis gives a conditional probability distribution for randomly sampling recruitment submodels in each year of the projection time horizon. As in previous versions of AGEPRO, a single recruitment model can be used for the entire projection time horizon by setting \\(N_M - 1\\).\nOne advantage of including multiple recruitment models with time-varying probabilities is that one can use auxiliary information on recruitment strength, such as environmental covariates, to make short-term recruitment predictions (1-2 years) and then change to a less informative set of medium-term recruitment models for medium-term recruitment predictions (3-5 years). Another advantage of including multiple recruitment models is to account for model selection uncertainty, which can be a substantial source of uncertainty for some fishery systems."
  },
  {
    "objectID": "08_process-errors.html#total-stock-biomass",
    "href": "08_process-errors.html#total-stock-biomass",
    "title": "Process Errors for Population and Fishery Processes",
    "section": "Total Stock Biomass",
    "text": "Total Stock Biomass\nTotal stock biomass \\(B_T\\) is the sum over the recruitment age (\\(r\\)) to the plus-group age (\\(A\\)) of stock biomass at age on January 1st. The computational formula for \\(B_T\\) in year \\(t\\) is\n\\[\nB_T(t) = \\sum\\limits_{a=r}^{A}W_{P,a}(t) \\cdot N_a(t) \\tag{47}\\label{eq:47}\n\\] where \\(W_{P,a}(t)\\) is the population mean weight of age-a fish on January 1st in year \\(t\\)."
  },
  {
    "objectID": "08_process-errors.html#mean-biomass",
    "href": "08_process-errors.html#mean-biomass",
    "title": "Process Errors for Population and Fishery Processes",
    "section": "Mean Biomass",
    "text": "Mean Biomass\nMean stock biomass \\(\\overline{B}\\) is the average biomass of the stock over a given year. In particular, mean stock biomass depends on the total mortality rate experienced by the stock in each year. In the AGEPRO model, the user selects the range of ages to be used for calculating mean biomass. One can choose the full range of ages in the model (age-\\(r\\) through age-\\(A\\)) or alternatively select a smaller age range if desired. In this case, the upper age \\(A_U\\) for mean biomass calculations must be less than or equal to the plus group age \\(A.\\) Similarly, the lower age \\(A_L\\) must be greater than or equal to the recruitment age \\(r\\). If \\(W_{midyear,a}(t)\\) denotes the mean weight of age-\\(a\\) fish at the mid-point of year \\(t\\) then the computational formula for \\(\\overline{B}\\) in year \\(t\\) is\n\\[\n\\overline{B}(t) = \\sum\\limits_{a=A_L}^{A_U}W_{midyear,a}(t) \\cdot N_a(t) \\cdot \\dfrac{\\bigl(1-\\exp(-M_a(t)-F_a(t))\\bigr)}{\\bigl(M_a(t)+F_a(t)\\bigr)}\n\\tag{48}\\label{eq:48}\n\\]\nwhere \\(F_a(t)\\) is the total fishing mortality on age-\\(a\\) fish calculated across all fleets."
  },
  {
    "objectID": "08_process-errors.html#fishing-mortality-weighted-by-mean-biomass",
    "href": "08_process-errors.html#fishing-mortality-weighted-by-mean-biomass",
    "title": "Process Errors for Population and Fishery Processes",
    "section": "Fishing Mortality Weighted by Mean Biomass",
    "text": "Fishing Mortality Weighted by Mean Biomass\nFishing mortality weighted by mean biomass \\(F_{\\overline{B}}(t)\\) in year \\(t\\) is the mean-biomass weighted sum of fishing mortality at age over the age range of \\(A_L\\) to \\(A_U\\) (see Mean Biomass above). This quantity may be useful for equilibrium comparisons with fishing mortality reference points developed from surplus production models. The computational formula for fishing mortality weighted by mean biomass is\n\\[\n\\begin{split}\n& F_{\\overline{B}}(t) = \\frac{\\sum\\limits_{a=A_L}^{A_u} \\overline{B}_a(t) \\cdot F_a(t) }{\\overline{B}(t)}\\\\\n& \\\\\n& where\\ \\overline{B}_a(t) = W_{midyear,a}(t)\\cdot N_a(t) \\cdot  \\frac{\\bigl(1-\\exp(-M_a(t)-F_a(t))\\bigr)}{\\bigl(M_a(t)+F_a(t)\\bigr)}\\\\\n\\end{split}\n\\tag{49}\\label{eq:49}\n\\]\nwhere \\(F_a(t)\\) is the total fishing mortality on age-\\(a\\) fish calculated across all fleets."
  },
  {
    "objectID": "09_thresholds.html#feasible-simulations",
    "href": "09_thresholds.html#feasible-simulations",
    "title": "Reference Point Thresholds",
    "section": "Feasible Simulations",
    "text": "Feasible Simulations\nA feasible simulation is defined as one where the all landings quotas by fleet can be harvested in each year of the projection time horizon. An infeasible simulation is one where the exploitable biomass is insufficient to harvest at least one landings quota in one or more years of the time horizon. All simulations are feasible for projections where population harvest is based solely on fishing mortality values. For projections that specify landings quotas by fleet in one or more years, the feasibility of harvesting the landings quota is evaluated using an upper bound on \\(F\\) that defines infeasible quotas relative to the exploitable biomass (Appendix). For purposes of summarizing projection results, the total number of simulations is denoted as \\(K_{TOTAL}\\) and the total number of feasible simulations is denoted as \\(K_{FEASIBLE}\\)."
  },
  {
    "objectID": "09_thresholds.html#biomass-thresholds",
    "href": "09_thresholds.html#biomass-thresholds",
    "title": "Reference Point Thresholds",
    "section": "Biomass Thresholds",
    "text": "Biomass Thresholds\nThe user can specify biomass thresholds for spawning biomass \\(\\bigl(B_{S,THRESHOLD}\\bigr)\\), mean biomass \\(\\bigl(\\overline{B}_{THRESHOLD}\\bigr)\\), and total stock biomass \\(\\bigl(B_{T,THRESHOLD}\\bigr)\\) for Sustainable Fisheries Act (SFA) policy evaluation. These biomass thresholds can be specified using the input keyword REFPOINT (Tables 2 and 3). If the REFPOINT keyword is used in an AGEPRO model, then projected biomass values are compared to the input thresholds through time. Probabilities that biomasses meet or exceed threshold values are computed for each year. In addition, the probability that biomass thresholds were exceeded in at least one year within a single simulated population trajectory is computed. If the user specifies fishing mortality-based harvesting with no landings quotas, then the SFA-threshold probabilities are computed over the entire set of simulations. Let \\(K_B(t)\\) be the number of times that projected biomass \\(B(t)\\) meets or exceeds a threshold biomass \\(B_{THRESHOLD}\\) in year \\(t\\). The counter \\(K_B(t)\\) is evaluated for each year and biomass series (spawning, mean, or total stock). Given that \\(K_{TOTAL}\\) is the total number of feasible simulation runs, the estimate of the annual probability that \\(B_{THRESHOLD}\\) would be met or exceeded in year \\(t\\) is\n\\[\n\\Pr(B(t)) \\ge B_{THRESHOLD} = \\frac{K_B(t)}{K_{TOTAL}} \\tag{50}\\label{eq:50}\n\\]\nNote that this also provides an estimate of the probability of the complementary event that biomass does not exceed the threshold via\n\\[\n\\Pr(B(t) &lt; B_{THRESHOLD}) = 1 - \\Pr(B(t) \\ge B_{THRESHOLD} ) = 1 - \\frac{K_B(t)}{K_{TOTAL}} \\tag{51}\\label{eq:51}\n\\]\nNext, if \\(K_{THRESHOLD}\\) denotes the number of simulations where biomass exceeded its threshold at least once, then the probability that \\(K_{THRESHOLD}\\) would be met or exceeded at least\n\\[\n\\Pr(\\exists{t} \\in [1,2,\\dots,Y]\\ such\\ that\\ B(t) \\ge B_{THRESHOLD}) = \\frac{K_{THRESHOLD}}{K_{TOTAL}} \\tag{52}\\label{eq:52}\n\\]\nIf the user specifies landings quota-based harvesting in one or more years, then the SFA-threshold probabilities can be computed over the set of feasible simulations. In this case, the year-specific conditional probability that \\(B_{THRESHOLD}\\) would be met or exceeded for feasible simulations is\n\\[\n\\Pr(B(t)) \\ge B_{THRESHOLD} = \\frac{K_B(t)}{K_{FEASIBLE}} \\tag{53}\\label{eq:53}\n\\]\nNote that the counter \\(K_B(t)\\) can only be incremented in a feasible simulation. In contrast, the joint probability that \\(B_{THRESHOLD}\\) would be met or exceeded for the entire set of simulations is given by (\\(\\ref{eq:52}\\)) and the probability that \\(B_{THRESHOLD}\\) would be met or exceeded at least once during the projection time horizon is given by (\\(\\ref{eq:53}\\))."
  },
  {
    "objectID": "09_thresholds.html#fishing-mortality-thresholds",
    "href": "09_thresholds.html#fishing-mortality-thresholds",
    "title": "Reference Point Thresholds",
    "section": "Fishing Mortality Thresholds",
    "text": "Fishing Mortality Thresholds\nThe user can specify the fishing mortality rate threshold for annual total fishing mortality \\((F_{THRESHOLD})\\) calculated across all fleets using the keyword REFPOINT. In this case, projected total \\(F\\) values are compared to the \\(F_{THRESHOLD}\\) through time. Probabilities that fishing mortalities exceed threshold values are computed for each year in the same manner as for biomass thresholds (see Biomass Thresholds). In particular, if \\(K_F(t)\\) is the number of times that fishing mortality \\(F(t)\\) exceeds the threshold fishing mortality \\(F_{THRESHOLD}\\) in year \\(t\\), then the annual probability that the fishing mortality threshold is exceeded is\n\\[\n\\Pr(F(t) &gt; F_{THRESHOLD}) = \\frac{K_F(t)}{K_{TOTAL}} \\tag{54}\\label{eq:54}\n\\] and the complementary probability that the fishing mortality threshold is not exceeded is\n\\[\n\\Pr(F(t) \\le F_{THRESHOLD}) = 1 - \\frac{K_F(t)}{K_{TOTAL}} \\tag{55}\\label{eq:55}  \n\\]"
  },
  {
    "objectID": "10_harvest-projections.html#standard-projection",
    "href": "10_harvest-projections.html#standard-projection",
    "title": "Types of Projection Analyses",
    "section": "Standard Projection",
    "text": "Standard Projection\nThe standard projection analysis is the most flexible and can be used to apply mixtures of quota and fishing mortality based harvest by multiple fleets to the age-structured population. For a standard projection, alternative models can be setup and evaluated using any of the keyword options (Tables 2 and 3) except the REBUILD keyword."
  },
  {
    "objectID": "10_harvest-projections.html#rebuilding-projection",
    "href": "10_harvest-projections.html#rebuilding-projection",
    "title": "Types of Projection Analyses",
    "section": "Rebuilding Projection",
    "text": "Rebuilding Projection\nThe rebuilding type of projection analysis is focused on the calculation of the constant total fishing mortality calculated across all fleets that will rebuild the population, denoted as \\(F_{REBUILD}\\). In this case, the user needs to specify the target year (TargetYear, see keyword REBUILD in Table 3) in which the population is to be rebuilt, the target biomass value (TargetType), the type of biomass being rebuilt (TargetType, e.g., spawning stock biomass), and the target percentage for achieving the rebuilding target expressed in terms of the fraction of simulations that achieve the rebuilding target (TargetPercent). Note that in cases where the rebuilding target is not achievable, the summary output of the rebuilding analysis will report that the combined catch, total fishing mortality and landings distributions are zero throughout the projection time horizon. For a rebuilding projection, the user needs to specify an initial harvest scenario of total fishing mortality values by year using the keyword HARVEST. The value of \\(F_{REBUILD}\\) will then be iteratively calculated and the model results will be reported for the projection using the calculated value of \\(F_{REBUILD}\\). For a rebuilding projection, the model can be setup and evaluated using any of the keyword options (Tables 2 and 3) except the PSTAR keyword."
  },
  {
    "objectID": "10_harvest-projections.html#pstar-projection",
    "href": "10_harvest-projections.html#pstar-projection",
    "title": "Types of Projection Analyses",
    "section": "PStar Projection",
    "text": "PStar Projection\nThe acronym PStar stands for the probability of exceeding the overfishing threshold in a target year. The PStar type of projection analysis is focused on the calculation of the total allowable catch \\(TAC_{PStar}\\) that will achieve the specified probability of overfishing in the target year. In this case, the user needs to specify the target year (TargetYear, see keyword PSTAR in Table 3) in which the total annual catch to achieve PStar is calculated, the number of PStar values to be evaluated (KPStar), the vector of probabilities of overfishing or PStar values to be used (PStar), and the fishing mortality rate that defines the overfishing level (PStarF. For a PSTAR projection, the model can be setup and evaluated using any of the keyword options (Tables 2 and 3) except the REBUILD keyword."
  },
  {
    "objectID": "11_AGEPRO-software.html",
    "href": "11_AGEPRO-software.html",
    "title": "Age‐Structured Projection Software",
    "section": "",
    "text": "This section covers operational details for using the AGEPRO software and is organized into three sections. First, input data requirements and projection options are covered and the structure of an input file is described. Second, projection model outputs are described in relation to keywords in the input file and the structure of the standard output file is described. Third, a set of examples are provided to illustrate projection options and features of the software."
  },
  {
    "objectID": "11-1_input-data.html",
    "href": "11-1_input-data.html",
    "title": "Input Data",
    "section": "",
    "text": "There are four categories of input data for an AGEPRO projection run: system, simulation, biological, and fishery (Figure 2). The system data consists of the input filename and this information is read from standard input (e.g., from the command line or via the AGEPRO GUI). The simulation, biological and fishery data are read from the text input file and the associated text bootstrap file containing the initial population numbers at age data.\nThe AGEPRO input file is structured by keywords. Each keyword identifies a set of related inputs for the projection run in a single section of the input file (Table 2). The table of AGEPRO input keywords below lists the 23 possible keywords in the sequential order that the information is read into the program.\nEach keyword specifies a projection model attribute and the associated set of inputs that are required to implement it (Table 3). This includes a detailed listing of the AGEPRO input file structure showing the sequence of inputs by keyword. Here the input data type is shown in parentheses, where the types are: I=integer, S=string, F=floating point (Table 3). For data that are input as an array, the array dimensions are listed in order as [0: Dimension1] [0: Dimension2] and so on (Table 3).\nThe system data consists of the input file name for the projection run (Figure 2). The input file name can be any text string with the file extension inp. For example, a valid input file name is GB cod 2017 FMSY projection.inp.\nWithin the input file, the simulation data are specified (Tables 2 and 3) within the keyword sections named: GENERAL, CASEID, BOOTSTRAP, RETROADJUST, BOUNDS, OPTIONS, SCALE, PERC, REFPOINT, REBUILD, and PSTAR.\nThe biological data are specified (Tables 2 and 3) within the keyword sections of the input file named: NATMORT, BIOLOGICAL, MATURITY, STOCK_WEIGHT, SSB_WEIGHT, MEAN_WEIGHT, and RECRUIT. The recruitment models are specified in the RECRUIT keyword section and the specific inputs needed for each recruitment model are listed in Table 4.\nThe fishery data are specified (Tables 2 and 3) within the keyword sections of the input file named: HARVEST, FISHERY, DISCARD, CATCH_WEIGHT, and DISC_WEIGHT.\nTo run the AGEPRO program using the AGEPRO GUI, do the following:\n\nStart the AGEPRO program (double left click on the program icon)\nUnder the File menu tab, select either “Create a New Case” or “Select Existing AGEPRO Input Data File” to set the input data file For the selected input file, click on the Run menu tab and select “Launch AGEPRO model …”.\nWhen the projection run is completed, the AGEPRO output files are written to a new folder. The new folder is created in the folder ~/Username/Documents/AGEPRO/New_Folder_Name where the New_Folder_Name is the input data file name with the time stamp of the run appended to it.\n\nTo run the AGEPRO program from the command line, enter agepro.exe inputfilename. The software first checks whether the input file exists and will stop if the input file does not exist. If the input file exists and is successfully read, you will see the following output in the command line screen:\n&gt;agepro.exe inputfilename\n&gt; Bootstrap Iteration: 1\n&gt; Bootstrap Iteration: 2\n...\n&gt; Bootstrap Iteration: NBootstrap\n&gt; Summary Reports …"
  },
  {
    "objectID": "table2_AGEPRO-keywords.html",
    "href": "table2_AGEPRO-keywords.html",
    "title": "Table 2: AGEPRO Keyword Parameters",
    "section": "",
    "text": "Table 2: Table of AGEPRO input file keywords.\n\n\n\n\n\n\nKeyword\nPurpose\n\n\n\n\nGENERAL\nInput general model parameters\n\n\nCASEID\nInput title identifying model attributes\n\n\nBOOTSTRAP\nInput information for bootstrap numbers at age file\n\n\nHARVEST\nInput information for harvest intensity (\\(F\\) or \\(Q\\)) by fleet\n\n\nRETROADJUST\nInput information for retrospective bias adjustment\n\n\nNATMORT\nInput information for natural mortality rate (\\(M\\)) at age\n\n\nBIOLOGICAL\nInput information on seasonal spawning timing for \\(F\\) and \\(M\\)\n\n\nMATURITY\nInput information on maturity at age\n\n\nSTOCK_WEIGHT\nInput information on stock weights (Jan \\(1^{st}\\)) at age\n\n\nSSB_WEIGHT\nInput information on spawning biomass weights at age\n\n\nMEAN_WEIGHT\nInput information on mean weights at age\n\n\nFISHERY\nInput information on fishery selectivity at age by fleet\n\n\nDISCARD\nInput information on discard fraction of numbers at age\n\n\nCATCH_WEIGHT\nInput information on catch weights at age\n\n\nDISC_WEIGHT\nInput information on discard weights at age\n\n\nRECRUIT\nInput information on recruitment model\n\n\nBOUNDS\nInput bounds on simulated fish weights and natural mortality rates\n\n\nOPTIONS\nInput information on projection output\n\n\nSCALE\nInput information on scaling factors for biomass, recruitment, and stock size\n\n\nPERC\nInput information for setting a specific percentile for the distributions of outputs\n\n\nREFPOINT\nInput information for reference points\n\n\nREBUILD\nInput information for calculating \\(F\\) to rebuild spawning biomass\n\n\nPSTAR\nInput information for calculating \\(TAC\\) to produce \\(P*\\) which is the probability of overfishing in the target projection year."
  },
  {
    "objectID": "table3_keyword-struct.html",
    "href": "table3_keyword-struct.html",
    "title": "Table 3: AGEPRO Keyword structure",
    "section": "",
    "text": "Table 3: Structure of AGEPRO VERSION 4.25 input file by keyword.\n\n\n\n\n\n\nKeyword\nInput Variable\n\n\n\n\nGENERAL\n\nNFyear (I) - this is the first year of the projection\nNXYear (I) - this is the last year of the projection\nNFAge (I) – this is the first age in the population model\nNXAge (I) – this is the plus-group age in the population model\nNSims (I) – this is the number of simulations to conduct for each bootstrap replicate of initial population size\nNFleet (I) – this is the number of fleets in the harvest model\nNRecModel (I) – this is the number of recruitment submodels in the population model\nDiscFlag (I) – this is a logical flag to indicate whether discards are included in the harvest model (1=true, 0=false)\nISeed (I) – this is a positive integer seed to initialize the random number generator\n\n\n\nCASEID\n\nModel (S) – this is a string that describes the projection model run\n\n\n\nBOOTSTRAP\n\nNBoot (I)- this is the number of bootstrap replicates of initial population size\nBootFac (F) – this is the multiplicative factor to convert the relative bootstrap population numbers at age to absolute numbers at age\nBootFile (S) – this is the name of the bootstrap filename including the file path\n\n\n\nHARVEST\n\nHarvestSpec [0:NYears-1] (F) – this is the harvest specification by year vector where an input of zero indicates an F-based harvest rate and any positive input indicates a quota-based harvest rate (that is, input=0 for F and input&gt;0 for catch biomass)\nHarvestValue [0:NYears-1][0:Nfleet-1] (F) – this is the harvest amount by year and fleet array where an input row is the set of annual F values or catches (in metric tons) depending on the harvest specification by year.\n\n\n\nRETROADJUST\n\nRetroAdjust [0:NAges-1] (F) – this is the vector of age-specific numbers at age multipliers for an initial population size at age vector if retrospective bias adjustment is applied\n\n\n\nNATMORT\n\nNatMortFlag (I) – this is the logical flag that indicates if the average natural mortality rate at age vector is to be read from an existing data file (input=1) or not (input≠)\nNatMortTimeFlag (I) – this is the logical flag that indicates if the average natural mortality rate at age vector is a time-varying array (input =1) ordered by year (row) and age (column); otherwise the average natural mortality rate at age vector does not vary by year\n\nIf (NatMortFlag = 1) then read DataFiles[*] (S)\nElse if (NatMortTimeFlag = 1) then Read AvgNatMort[0:NAges-1][0:NYears-1] (F)\nElse Read AvgNatMort[0:NAges-1][0] (F)\n\n- This is the logic for the average natural mortality rate at age vector inputs\nNatMortErr[0:NAges-1] (F) This is the vector of age-specific CVs for sampling the natural mortality rate at age vector with lognormal process error\n\n\n\nBIOLOGICAL\n\nZFracTimeFlag (I) – this is the logical flag that indicates if the within-year fractions of fishing (TF) and natural (TM) mortality that occur from January \\(1^{st}\\) to the spawning season are a time-varying array (input =1) or constant values (input≠1) where 0≤TF≤1 and 0≤TM≤1. For example, if the spawning season begins in July and input=0 then TF=TM=½\n\nIf (ZFracTimeFlag = 1) then read TF[0:NYears-1] (F) and read TM[0:NYears-1] (F)\nElse read TF (F) and read TM (F)\n\n\n\n\nMATURITY\n\nMaturityFlag (I) – this is the logical flag that indicates if the average fraction mature at age vector is to be read from an existing data file (input =1) or not (input≠1)\nMaturityTimeFlag (I) – this is the logical flag that indicates if the average fraction mature at age vector is a time-varying array (input =1) ordered by year (row) and age (column); otherwise the average fraction mature at age vector does not vary by year.\n\nIf (MaturityFlag = 1) then read DataFiles[*] (S)\nElse if (MaturityTimeFlag = 1) then read AvgMaturity [0:NAges-1][0:NYears-1] (F)\nElse read AvgMaturity[0:NAges-1][0] (F) )\n\n- this is the logic for the average fraction mature at age vector inputs\nMaturityErr[0:NAges-1] (F) – this is the vector of age-specific CVs for sampling the fraction mature at age vector with lognormal process error\n\n\n\nSTOCK_WEIGHT\n\nStockWtFlag (I) – this is the logical flag that indicates if the average stock weight at age vector is to be read from an existing data file (input =1) or not (input≠1)\nStockWtTimeFlag (I) – this is the logical flag that indicates if the average stock weight at age vector is a time-varying array (input =1) ordered by year (row) and age (column); otherwise the average stock weight at age vector does not vary by year\n\nIf (StockWtFlag = 1) then read DataFiles[*] (S)\nElse if (StockWtTimeFlag = 1) then read AvgStockWeight [0:NAges-1][0:NYears-1] (F)\nElse read AvgStockWeight [0:NAges-1][0] (F) )\n\n- this is the logic for the average stock weight at age vector inputs|\nStockWtErr[0:NAges-1] (F) – this is the vector of age-specific CVs for sampling the stock weight at age vector with lognormal process error\n\n\n\nSSB_WEIGHT\n\nSpawnWtFlag (I) – this is the logical flag that indicates if the average spawning weight at age vector is to be read from an existing data file (input&gt;0) or to be read from the input file (input=0) or to be set equal to the average stock weight at age vector (input=-1)\nSpawnWtTimeFlag (I) – this is the logical flag that indicates if the average spawning weight at age vector is a time-varying array (input =1) ordered by year (row) and age (column); otherwise the average spawning weight at age vector does not vary by year\n\nIf (SpawnWtFlag &gt;0) then read DataFiles[*] (S)\nElse if (SpawnWtFlag = -1) then set average spawning weight at age vector to equal the average stock weight at age vector\nElse if (SpawnWtTimeFlag = 1) then read AvgSpawnWeight [0:NAges-1][0:NYears-1] (F)\nElse read AvgSpawnWeight [0:NAges-1][0] (F)\n\n– this is the logic for the average spawning weight at age vector inputs\nSpawnWtErr[0:NAges-1] (F) – this is the vector of age-specific CVs for sampling the spawning weight at age vector with lognormal process error\n\n\n\nMEAN_WEIGHT\n\nMeanStockWtFlag (I) – this is the logical flag that indicates if the average mean weight at age vector is to be read from an existing data file (input&gt;0) or not (input=0)\nMeanStockWtTimeFlag (I) – this is the logical flag that indicates if the average mean weight at age vector is a time-varying array (input=1) ordered by year (row) and age (column); otherwise the average mean weight at age vector does not vary by year\n\nIf (MeanStockWtFlag &gt;0) then read DataFiles[*] (S)\nElse if (MeanStockWtTimeFlag = 0) then read AvgMeanStockWeight [0:NAges-1][0:NYears-1] (F)\nElse read AvgMeanStockWeight [0:NAges-1][0] (F)\n\n– this is the logic for the average mean weight at age vector inputs\nMeanStockWtErr[0:NAges-1] (F) – this is the vector of age-specific CVs for sampling the mean weight at age vector with lognormal process error\n\n\n\nFISHERY\n\nFSelecFlag (I) – this is the logical flag that indicates if the average fishery selectivity at age vectors by fleet are to be read from an existing data file (input=1) or not (input≠1)\nFSelecTimeFlag (I) – this is the logical flag that indicates if the average fishery selectivity at age vectors by fleet are a time-varying array (input=1) ordered by fleet (index 1), year (index 2), and age (index 3); otherwise the average fishery selectivity at age vectors by fleet do not vary by year\n\nIf (FSelecFlag = 1) then read DataFiles[*] (S)\nElse if (FSelecTimeFlag = 1) then read AvgFSelec [0:NAges-1][0:NYears-1][0:NFleets-1] (F)\nElse read AvgFSelec[0:NAges-1][0][0:NFleets-1] (F)\n\n– this is the logic for the average fishery selectivity at age vectors by fleet inputs\nFSelecErr[0:NAges-1][0:NFleets-1] (F) – this is the array of age-specific and fleet-specific CVs for sampling the fishery selectivity at age vectors by fleet with lognormal process error\n\n\n\nDISCARD\n\nDiscFracFlag (I) – this is the logical flag that indicates if the average discard fraction at age vectors by fleet are to be read from an existing data file (input=1) or not (input≠1)\nDiscFracTimeFlag (I) – this is the logical flag that indicates if the average discard fraction at age vectors by fleet are a time-varying array (input =1) ordered by fleet (index 1), year (index 2), and age (index 3); otherwise the average discard fraction at age vectors by fleet do not vary by year\n\nIf (DiscFracFlag = 1) then read DataFiles[*] (S)\nElse if (DiscFracTimeFlag = 1) then read AvgDiscFrac [0:NAges-1][0:NYears-1][0:NFleets-1] (F)\nElse read AvgDiscFrac[0:NAges-1][0][0:NFleets-1] (F)\n\n– this is the logic for the average discard fraction at age vectors by fleet inputs\nDiscFracErr[0:NAges-1][0:NFleets-1] (F) – this is the array of age-specific and fleet-specific CVs for sampling the discard fraction at age vectors by fleet with lognormal process error\n\n\n\nCATCH_WEIGHT\n\n\nCatchWtFlag (I) – this is the logical flag that indicates if the average catch weight at age vectors by fleet are to be read from an existing data file (input&gt;0)\nor to be read from the input file (input=0)\nor to be set equal to the average stock weight at age vector (input=-1)\nor to be set equal to the average spawning weight at age vector (input=-2)\nor to be set equal to the average mean weight at age vector (input=-3)\n\nCatchWtTimeFlag (I) – this is the logical flag that indicates if the average catch weight at age vectors by fleet are a time-varying array (input =1) ordered by fleet (index 1), year (index 2), and age (index 3); otherwise the average catch weight at age vectors by fleet do not vary by year\n\nIf (CatchWtFlag &gt;0) then read DataFiles[*] (S)\nElse if (CatchWtFlag = -1) then set average catch weight at age vector to equal the average stock weight at age vector\nElse if (CatchWtFlag = -2) then set average catch weight at age vector to equal the average spawning weight at age vector\nElse if (CatchWtFlag = -3) then set average catch weight at age vector to equal the average mean weight at age vector\nElse if (CatchWtTimeFlag = 0) then read AvgCatchWeight [0:NAges-1][0:NYears-1][0:NFleets-1] (F)\nElse read AvgCatchWeight[0:NAges-1][0][0:NFleets-1] (F)\n\n– this is the logic for the average catch weight at age vector inputs\nCatchWtErr[0:NAges-1][0:NFleets-1] (F) – this is the array of age-specific and fleet-specific CVs for sampling the catch weight at age vectors by fleet with lognormal process error\n\n\n\nDISC_WEIGHT\n\n\nDiscWtFlag (I) – this is the logical flag that indicates if the average discard weight at age vectors by fleet are to be read from an existing data file (input&gt;0)\nor to be read from the input file (input =0)\nor to be set equal to the average stock weight at age vector (input=-1)\nor to be set equal to the average spawning weight at age vector (input=-2)\nor to be set equal to the average mean weight at age vector (input=-3)\nor to be set equal to the average catch weight at age vector (input=-4)\n\nDiscWtTimeFlag (I) ) – this is the logical flag that indicates if the average discard weight at age vectors by fleet are a time-varying array (input =1) ordered by fleet (index 1), year (index 2), and age (index 3); otherwise the average discard weight at age vectors by fleet do not vary by year\n\nIf (DiscWtFlag = 1) then read DataFiles[*] (S)\nElse if (DiscWtFlag = -1) then set average discard weight at age vector to equal the average stock weight at age vector\nElse if (DiscWtFlag = -2) then set average discard weight at age vector to equal the average spawning weight at age vector\nElse if (DiscWtFlag = -3) then set average discard weight at age vector to equal the average mean weight at age vector\nElse if (DiscWtFlag = -4) then set average discard weight at age vector to equal the average catch weight at age vector\nElse if (DiscWtTimeFlag = 1) then read AvgDiscWeight [0:NAges-1][0:NYears-1][0:NFleets-1] (F)\nElse read AvgDiscWeight[0:NAges-1][0][0:NFleets-1] (F)\n\n– this is the logic for the average discard weight at age vector inputs\nDiscWtErr[0:NAges-1][0:NFleets-1] (F) – this is the array of age-specific and fleet-specific CVs for sampling the discard weight at age vectors by fleet with lognormal process error\n\n\n\nRECRUIT\n\nRecFac (F) – this is the multiplier to convert recruitment submodel units for recruitment to absolute numbers of fish\nSSBFac (F) – this is the multiplier to convert recruitment submodel units for spawning biomass to absolute spawning weight of fish in kilograms\nMaxRecObs (I) – this is the maximum number of recruitment observations for an empirical recruitment submodel (up to the maximum value of a long int, or about 2 billion array elements)\nRecruitType[0:NRecModel-1] (I) – this is the vector of recruitment submodel types in the projection\nRecruitProb[0:NYears-1][0:NRecModel-1] (F) – this is the array of recruitment submodel probabilities ordered by year (row) and submodel (column) with row sums equal to unity\nFor J=0 to (NRecModel – 1)  Call ReadRecruitModelInput(J,[RecruitType[J]) – this is the set of function calls to read in the input data needed for each recruitment submodel in the order they are specified in RecruitType where the required input data for each submodel are listed in Table 4.\n\n\n\nBOUNDS\n\nMaxWeight (F) – this is the maximum value of an fish weight, noting that there is lognormal sampling variation for weight at age values\nMaxNatMort (F) – this is the maximum natural mortality rate, noting that there is lognormal sampling variation for natural mortality at age values\n\n\n\nPERC\n\nPercReportValue (F) – this is the user-selected percentile for reporting the percentile of the projected distribution of the following by year: spawning stock biomass, stock biomass on January \\(1^{st}\\), mean biomass, combined catch biomass, landings, fishing mortality, and stock numbers at age\n\n\n\nREFPOINT\n\nSSBThresh (F) – this is the spawning biomass threshold expressed in biomass output units\nStockBioThresh (F) – this is the stock biomass threshold expressed in biomass output units\nMeanBioThresh (F) – this is the mean biomass threshold expressed in biomass output units\nFMortThresh (F) – this is the fishing mortality threshold\n\n\n\nOPTIONS\n\nStockSummaryFlag (I) – this is the logical flag to output stock summary information\n\nI=0: No stock summary or auxiliary files\nI=1. Stock summary in output file and no auxiliary files\nI=2. Stock summary in output file and auxiliary files 2 through 10 are produced\nI=3. Stock summary in output file and all auxiliary files are produced\n\nDataFlag (I) – this is the logical flag to output population and fishery processes simulated with lognormal process error to auxiliary output files\nExportRFlag (I) – this is the logical flag to output projection results to an R dataframe\n\n\n\nSCALE\n\nscalebio (F) – the output units of biomass expressed in thousand metric tons\nscalerec (F) – the output units of recruitment numbers\nscalestk (F) – the output units of stock size numbers\n\n\n\nREBUILD\n\nTargetYear (I) – this is the user-selected target year for rebuilding to the target value\nTargetValue (F) – this is the target biomass value in units of thousands of metric tons\nTargetType (I) – this is the index for the type of population biomass as the target where index=0 is spawning stock biomass, index=1 is stock biomass on January 1st, else target is mean biomass\nTargetPercent (F) – this is the percent frequency of achieving the target value by the target year where the percent frequency is a value between 0 (indicating zero chance of achieving target) and 100 (indicating 100 percent chance of achieving target)."
  },
  {
    "objectID": "table4_recruit-models.html",
    "href": "table4_recruit-models.html",
    "title": "Table 4: Input data structure for AGEPRO Recruitment Models",
    "section": "",
    "text": "Table 4: Required input data for AGEPRO recruitment models, where spawning biomass and recruitment inputs are measured in units of RECRUIT the conversion factors SSBFac and RecFac respectively, which typically have units of SSBFac=RecFac=1000.\n\n\n\n\n\n\n\nModel Number\nRecruitment Model\nRecruitment Model Input Description\n\n\n\n\n1\nMarkov Matrix\n\nInput the number of Recruitment States: \\(K\\)\nOn the next line, input the recruitment values: \\(R_1,R_2,...,R_K\\)\nOn the next line, input number of spawning biomass states: \\(J\\)\nOn the next line, input \\(J-1\\) cut points : \\(B_{S,1},B_{S,2},...,B_{S,J-1}\\)\nOn the next \\(J\\) lines, input the conditional recruitment probabilities for the spawning biomass states:\n\n\\(P_{1,1}, \\quad P_{1,2}, \\quad \\dots, \\quad P_{1,K}\\)  \\(P_{2,1}, \\quad P_{2,2}, \\quad \\dots, \\quad P_{2,k}\\)  \\(\\quad \\vdots \\quad\\quad \\vdots \\qquad\\quad \\vdots \\qquad\\quad \\vdots\\)  \\(P_{J,1}, \\quad P_{J,2}, \\quad \\dots, \\quad P_{J,K}\\)\n\n\n\n\n2\nEmpirical Recruits Per Spawning Biomass Distribution\n\nInput the number of stock recruitment data points: \\(T\\)\nOn the next line, input the recruitments: \\(R_1,R_2,...,R_T\\)\nOn the next line, input the spawning biomasses: \\(B_{S,1}, B_{S,2}, ..., B_{S,T}\\)\n\n\n\n3\nEmpirical Recruitment Distribution\n\nInput the number of recruitment data points: \\(T\\)\nOn the next line, input the recruitments: \\(R_1,R_2,...,R_T\\)\n\n\n\n4\nTwo-Stage Empirical Recruits Per Spawning Biomass Distribution\n\nInput the number of low and high recruits per spawning biomass data points: \\(T_{Low} \\cdot T_{High}\\)\nOn the next line, input the cutoff level of spawning biomass: \\(B^*_S\\)\nOn the next line, input the low state recruitments: \\(R_1,R_2,...,R_{T_{Low}}\\)\nOn the next line, input the low state spawning biomasses: \\(B_{S,1}, B_{S,2}, ..., B_{S,T_{Low}}\\)\nOn the next line, input the high state recruitments: \\(R_1,R_2,...,R_{T_{High}}\\)\nOn the next line, input the high state spawning biomasses: \\(B_{S,1}, B_{S,2}, ..., B_{S,T_{High}}\\)\n\n\n\n5\nBeverton-Holt Curve with Lognormal Error\n\nInput the stock-recruitment parameters: \\(\\alpha, \\beta, \\sigma^2_w\\)\n\n\n\n6\nRicker Curve with Lognormal Error\n\nInput the stock-recruitment parameters: \\(\\alpha, \\beta, \\sigma^2_w\\)\n\n\n\n7\nShepherd Curve with Lognormal Error\n\nInput the stock-recruitment parameters: \\(\\alpha, \\beta, k, \\sigma^2_w\\)\n\n\n\n8\nLognormal Distribution\n\nInput the log-scale mean and standard deviation: \\(\\mu_{\\log(r)},\\sigma_{\\log(r)}\\)\n\n\n\n10\nBeverton-Holt Curve with Autocorrected Lognornal Error\n\nInput the stock-recruitment parameters: \\(\\alpha, \\beta, \\sigma^2_w\\)\nOn the next line, input the autoregressive parameters: \\(\\phi, \\varepsilon_{0}\\)\n\n\n\n11\nRicker Curve with Autocorrected Lognormal Error\n\nInput the stock-recruitment parameters: \\(\\alpha, \\beta, \\sigma^2_w\\)\nOn the next line, input the autoregressive parameters: \\(\\phi, \\varepsilon_{0}\\)\n\n\n\n12\nShepherd Curve with Autocorrected Lognormal Error\n\nInput the stock-recruitment parameters: \\(\\alpha, \\beta, k, \\sigma^2_w\\)\nOn the next line, input the autoregressive parameters: \\(\\phi, \\varepsilon_{0}\\)\n\n\n\n13\nAutocorrected Lognormal Distribution\n\nInput the log-scale mean and standard deviation: \\(\\mu_{\\log(r)},\\sigma_{\\log(r)}\\)\nOn the next line, input the autoregressive parameters: \\(\\phi, \\varepsilon_{0}\\)\n\n\n\n14\nEmpirical Cumulative Distribution Function of Recruitment\n\nInput the number of recruitment data points: \\(T\\)\nOn the next line, input the recruitments \\(R_1,R_2,...,R_T\\)\n\n\n\n15\nTwo-Stage Empirical Cumulative Distribution Function of Recruitment\n\nInput the number of low and high recruits per spawning biomass data points: \\(T_{Low} \\cdot T_{High}\\)\nOn the next line, input cutoff level of spawning biomass: \\(B^*_S\\)\nOn the next line, input the low state recruitments: \\(R_1,R_2,...,R_{T_{Low}}\\)\nOn the next line, input the high state recruitments: \\(R_1,R_2,...,R_{T_{High}}\\)\n\n\n\n16\nLinear Recruits Per Spawning Biomass Predictor with Normal Error\n\nInput the predictors: \\(N_P\\)\nOn the next line, input the intercept coefficient: \\(\\beta_0\\)\nOn the next line, input the slope coefficient for each predictor: \\(\\beta_1, \\beta_2, ..., \\beta_{N_p}\\)\nOn the next line, input the error variance: \\(\\sigma^2\\)\nOn the next \\(N_P\\) lines, input the expected value of the predictor through projection time horizon:\n\n\\(X_1(1), \\quad\\ \\dots, \\quad\\ X_1(Y)\\)  \\(X_2(1), \\quad\\ \\dots, \\quad\\ X_2(Y)\\)  \\(\\ \\vdots \\qquad\\qquad\\ \\ \\vdots \\qquad\\quad\\ \\ \\vdots\\)  \\(X_P(1), \\quad\\ \\dots, \\quad\\ X_P(Y)\\)\n\n\n\n\n17\nLinear Recruits Per Spawning Biomass Predictor with Lognormal Error\n\nInput the number of predictors: \\(N_P\\)\nOn the next line, input the intercept: \\(\\beta_0\\)\nOn the next line, input the linear coefficient for each predictor: \\(\\beta_1, \\beta_2, ..., \\beta_{N_P}\\)\nOn the next line, input the log-scale error variance: \\(\\sigma^2\\)\nAnd on the next \\(N_P\\) lines, input the expected predictor values over the forecast time horizon \\(1, ..., Y\\)\n\n\\(X_1(1) \\quad X_1(2) \\quad \\dots \\quad X_1(Y)\\)  \\(X_2(1) \\quad X_2(2) \\quad \\dots \\quad X_2(Y)\\)  \\(\\quad \\vdots \\qquad\\quad\\ \\vdots \\qquad\\quad \\vdots \\qquad\\quad \\vdots\\)  \\(X_P(1) \\quad X_P(2) \\quad \\dots \\quad X_P(Y)\\)\n\n\n\n\n18\nLinear Recruitment Predictor with Normal Error\n\nInput the number of predictors: \\(N_P\\)\nOn the next line, input the intercept: \\(\\beta_0\\)\nOn the next line, input the linear coefficient for each predictor: \\(\\beta_1, \\beta_2, ..., \\beta_{N_P}\\)\nOn the next line, input the error variance: \\(\\sigma^2\\)\nAnd on the next \\(N_P\\) lines, input the expected predictor values over the forecast time horizon \\(1, ..., Y\\)\n\n\\(X_1(1) \\quad X_1(2) \\quad \\dots \\quad X_1(Y)\\)  \\(X_2(1) \\quad X_2(2) \\quad \\dots \\quad X_2(Y)\\)  \\(\\quad \\vdots \\qquad\\quad\\ \\vdots \\qquad\\quad \\vdots \\qquad\\quad \\vdots\\)  \\(X_P(1) \\quad X_P(2) \\quad \\dots \\quad X_P(Y)\\)\n\n\n\n\n19\nLoglinear Recruitment Predictor with Lognormal Error\n\nInput the number of predictors: \\(N_P\\)\nOn the next line, input the intercept: \\(\\beta_0\\)\nOn the next line, input the linear coefficient for each predictor: \\(\\beta_1, \\beta_2, ..., \\beta_{N_P}\\)\nOn the next line, input the log-scale error variance: \\(\\sigma^2\\)\nAnd on the next \\(N_P\\) lines, input the expected predictor values over the forecast time horizon \\(1, ..., Y\\)\n\n\\(X_1(1) \\quad X_1(2) \\quad \\dots \\quad X_1(Y)\\)  \\(X_2(1) \\quad X_2(2) \\quad \\dots \\quad X_2(Y)\\)  \\(\\quad \\vdots \\qquad\\quad\\ \\vdots \\qquad\\quad \\vdots \\qquad\\quad \\vdots\\)  \\(X_P(1) \\quad X_P(2) \\quad \\dots \\quad X_P(Y)\\)\n\n\n\n\n20\nFixed Recruitment\n\nInput the number of recruitment data points: \\(T\\)\nOn the next line, input the Recruitments: \\(R_1,R_2,...,R_T\\)\n\n\n\n21\nEmpirical Cumulative Distribution Function of Recruitment with Linear Decline to Zero\n\nInput the number of number of observed recruitment values: \\(T\\)\nOn the next line, input the recruitment values: \\(R_1, R_2, ..., R_T\\)\nAnd on the next line, input spawning biomass threshold: \\(B^*_S\\)"
  },
  {
    "objectID": "11-2_model-outputs.html",
    "href": "11-2_model-outputs.html",
    "title": "Model Outputs",
    "section": "",
    "text": "An AGEPRO model run creates a standard output file that summarizes the projection analysis results (Figure 2). The model will also create a set of files containing the raw output results for key quantities of interest. The user also has the option of creating output files for the simulated process error data for documentation and the option of creating an R export file that stores the projections results in an R language dataframe.\nThere are nine categories of output in the standard output file. The first output describes the setup of the AGEPRO model and lists the input and bootstrap file names and the recruitment models and associated model probabilities. The second output shows the input harvest scenario in terms of quotas or fishing mortality rates by year and fleet. The third output shows the realized distribution of recruitment through time. The fourth output shows the realized distribution of spawning stock biomass through time. The fifth output shows the realized distribution of total stock biomass on January 1st through time. The sixth output shows the realized distribution of mean biomass through time. The seventh output shows the realized distribution of combined catch biomass across fleets through time. The eighth output shows the realized distribution of landings through time. The ninth output shows the realized distribution of total fishing mortality through time. In addition, if the user has setup REBUILD or PSTAR projection analyses, then the results of those analyses will also be listed in the standard output file.\nThe user may also select to produce output file summaries of auxiliary projection results and of the distribution of population size at age by year. This is done by setting the value of the StockSummaryFlag under the keyword OPTIONS in the input file (Table 3). There are four output options for StockSummaryFlag:\n\nStockSummaryFlag = 0. This is the terse output option which removes the auxiliary files and does not produce a population size at age file summary.\nStockSummaryFlag = 1. This option removes the auxiliary files, produces a population size at age summary in the output file, but does produce a population size at age file summary.\nStockSummaryFlag = 2. This option retains the auxiliary files, produces a population size at age summary in the output file, but does not produce a population size at age file summary.\nStockSummaryFlag = 0. This is the verbose output option which retains the auxiliary files and produces a population size at age file summary.\n\nThe population size at age summary is output to a new file with the name inputfilename.xx1, where inputfilename is the name of the AGEPRO input file for the model. Note choosing to output the population size at age summary will typically produce a large file inputfilename.xx1 requiring on the order of 100Mb of storage. The auxiliary output files are needed for producing the summary of projection results in the projection output file. These files were automatically output in previous versions of AGEPRO but the user can now remove these files using the StockFlagSummary setting of “0” or “1” above.\nThe user may also select to produce a percentile summary of the key results in the outputfile. This is done by using the keyword PERC in the input file (Tables 2 and 3). The user may also select to store age-specific population and fisheries process error simulation results in auxiliary output files. This is done by setting the DataFlag=1 under the keyword OPTIONS in the input file (Table 3). Setting the DataFlag makes it possible to replicate a a projection run with the same random draws for setting population and fishery processes. The simulated process error data can include the following age-specific information, depending on the projection model setup: natural mortality at age, maturity fraction at age, stock weight on January 1st at age, spawning stock weight at age, mean population weight at age, fishery selectivity at age, discard fraction at age, catch weight at age and discard weight at age\nThe AGEPRO model will create auxiliary output data files to store simulated trajectories of recruitment, spawning biomass, total stock biomass on January 1st, mean biomass, combined catch biomass, landings, discards, and fishing mortality as well as catch by fleet if there is more than one fleet in the projection. This auxiliary output data can be used to characterize the distribution of these key outputs through time. One auxiliary file is created for each the outputs used in the projection model. The auxiliary output data files with names set to the projection inputfilename with an extension “xx#” are:\n\nStock numbers at age summary on January 1st: inputfilename.xx1 see note 1\nRecruitment: inputfilename.xx2\nSpawning Stock Biomass: inputfilename.xx3\nTotal Stock Biomass on January 1st: inputfilename.xx4\nMean Biomass: inputfilename.xx5\nCombined Catch Biomass: inputfilename.xx6\nLandings: inputfilename.xx7\nDiscards: inputfilename.xx8\nFishing Mortality: inputfilename.xx9\nCatch by Fleet: inputfilename.xx10\n\n\n\n\n\n\n\nNote 1\n\n\n\nNote that the stock numbers at age auxiliary file is created only if StockSummaryFlag=3.\n\n\nThe auxiliary output data files have similar file structures. In the stock numbers at age summary file each row represent the numbers at age (from age-1 to age-\\(A\\)) by year for each bootstrap-simulation block of \\(Y\\) rows. The auxiliary stock numbers at age output file will have a total number of rows equal to the number of bootstraps times the number of simulations per bootstrap.\nFor auxiliary output files 2 through 9, each row represents a single bootstrap-simulation combination and stores the simulated time trajectory of the output quantity with \\(Y\\) entries ordered from time \\(t=1\\) to time \\(t=Y\\). Within each file, the projection trajectories are blocked by the bootstrap population vector and then the set of simulations for that bootstrap vector. For example, if \\(B_S^{[b,k]}(t)\\) denotes the spawning biomass in year \\(t\\) simulated from the \\(b^{th}\\) initial population vector and the \\(k^{th}\\) simulation for that vector, then the output file for spawning biomass with \\(B\\) initial bootstrap vectors and \\(K\\) simulations would have \\(B \\cdot K\\) rows that were ordered as\n\\[\n\\begin{bmatrix}\nB_S^{[1,1]}(1) & B_S^{[1,1]}(2) & \\dots & B_S^{[1,1]}(Y) \\\\\nB_S^{[1,2]}(1) & B_S^{[1,2]}(2) & \\dots & B_S^{[1,2]}(Y) \\\\\n\\vdots & \\vdots & \\vdots & \\vdots \\\\\nB_S^{[B,K]}(1) & B_S^{[B,K]}(2) & \\dots & B_s^{[B,K]}(Y)\n\\end{bmatrix}\n\\tag{56}\\label{eq:56}\n\\] For the catch by fleet summary file, each block of four consecutive tows represents the time series of fishing mortality, catch biomass, landed biomass and discard biomass by fleet. If there are \\(N\\) fleets, then there are \\(4N\\) rows per bootstrap-simulation combination. These \\(N\\) blocks of four rows have the same ordering as the input fleet data, fleet 1, followed by fleet 2 and so on. Overall, the catch by fleet summary fleet has \\(4N \\cdot B \\cdot K\\) rows.\nThe units of the entries of the auxiliary output files are similar. The output units of the stock numbers at age and the recruitment files are numbers of fish. The output units of the spawning biomass, total stock biomass, mean biomass, combined catch biomass, landings, and discards files are metric tons. The units of the \\(F\\) summary file are the total annual instantaneous fishing mortality rate calculated across all fleets. The output units of the catch by fleet file are the annual instantaneous fishing mortality rates by fleet, and the catch, landings and discard biomasses by fleet in metric tons."
  },
  {
    "objectID": "11-3_agepro-examples.html",
    "href": "11-3_agepro-examples.html",
    "title": "AGEPRO Projection Examples",
    "section": "",
    "text": "The following set of examples is provided to illustrate projection options and features of the software. These projections use actual fishery data but are for the purposes of illustration only.\n\nExample 1\nThe first example is a fishing mortality and landings quota projection for Acadian redfish. The time horizon is 2004-2009. The fishery is comprised of two fleets that have identical fishing mortality rates in 2004, identical quotas in 2005, and fishing mortality rates that differ by 2-fold during 2006-2009. This is standard projection analysis with 1000 bootstraps and 100 simulations per bootstrap based on an ADAPT-VPA stock assessment analysis. The model also outputs an R dataframe.\nRunning example 1 (see Appendix for input file) produces the following output:\nAGEPRO VERSION 4.2\n\nREDFISH - RECRUITMENT MODEL 14\n\nDate & Time of Run: 29 Dec 2017  13:59\n\nInput File Name:    C:\\Users\\Jon.Brodziak\\Documents\\AGEPRO\\Example1_2017-12-29_13-58-58\\Example1.INP\n\nFirst Age Class:                         1\nNumber of Age Classes:                  26\nNumber of Years in Projection:           6\nNumber of Fleets:                        2\nNumber of Recruitment Models:            1\nNumber of Bootstraps:                 1000\nNumber of Simulations:                 100\n\nBootstrap File Name:            C:\\Users\\Jon.Brodziak\\Documents\\AGEPRO\\Example1_2017-12-29_13-58-58\\Example1.BSN\n\nNumber of Feasible Solutions:     100000  of     100000 Realizations\n\nInput Harvest Scenario\n\nYear  Type        Fleet-1    Fleet-2    \n\n2004  F-Mult       0.0024     0.0024 \n2005  Landings        350        350 \n2006  F-Mult       0.0100     0.0200 \n2007  F-Mult       0.0100     0.0200 \n2008  F-Mult       0.0100     0.0200 \n2009  F-Mult       0.0100     0.0200 \n\nRecruits     1000000  Fish\n\nYear Class   Average        StdDev\n2004         40.1044       48.2427\n2005         39.9399       48.4981\n2006         40.2597       48.6950\n2007         39.9988       48.2832\n2008         39.7856       47.8594\n2009         39.9688       48.3182\n\nRecruits Distribution\n\nYear Class 1%         5%         10%        25%        50%        75%        90%        95%        99%    \n2004     1.6349     2.0914     2.5542     6.4615    29.3437    62.2498    77.8929    90.2558   286.7976\n2005     1.6336     2.0901     2.5512     6.4411    29.2167    60.7815    77.8458    90.3986   287.6837\n2006     1.6339     2.0818     2.5503     6.4087    29.2849    62.5382    78.0184    90.7273   288.0993\n2007     1.6350     2.0884     2.5535     6.4762    29.2302    61.9145    77.9858    90.5247   286.4707\n2008     1.6291     2.0739     2.5581     6.5566    29.2446    60.6213    77.7622    89.1439   285.0904\n2009     1.6344     2.0814     2.5486     6.3915    29.2240    61.4137    77.9242    90.3276   286.2365\n\nSpawning Stock Biomass  x       1000 MT\n\nYear       Average        StdDev\n2004      175.6964        4.2235\n2005      192.3968        5.2539\n2006      201.4634        6.0700\n2007      207.9323        6.4531\n2008      213.1455        6.8011\n2009      215.0860        7.3413\n\nSpawning Stock Biomass Distribution\n\nYear        1%         5%         10%        25%        50%        75%        90%        95%        99%   \n2004   165.8676   168.7638   170.1585   172.7614   175.8218   178.5690   180.8508   182.8573   185.5046 \n2005   179.8766   183.7197   185.6327   188.7590   192.5027   195.8383   198.9160   201.2237   204.6554 \n2006   187.0135   191.4990   193.8062   197.3170   201.4796   205.3871   209.1779   211.8179   215.7972 \n2007   192.7856   197.3545   199.8073   203.5527   207.8812   212.1478   216.2523   218.9945   223.3188 \n2008   197.3263   201.9852   204.6063   208.5499   213.0613   217.5741   221.9399   224.8047   229.3702 \n2009   198.4668   203.2224   205.9017   210.1353   214.9276   219.7958   224.6939   227.6763   232.7305 \n\nJAN-1 Stock Biomass  x       1000 MT\n\nYear       Average        StdDev\n2004      200.4105        5.4728\n2005      211.6190        6.0268\n2006      219.0101        6.6628\n2007      224.8245        7.3809\n2008      230.5534        8.6653\n2009      233.1329       10.5266\n\nJAN-1 Stock Biomass Distribution\n\nYear       1%         5%         10%        25%        50%        75%        90%        95%        99%    \n2004   187.3186   191.4205   193.6011   196.6419   200.3894   203.9891   207.4034   209.8751   213.3976 \n2005   197.4892   201.7822   204.0521   207.4953   211.5906   215.5423   219.3350   222.0173   226.0517 \n2006   203.4717   208.0624   210.6302   214.5143   218.9420   223.3492   227.6193   230.4027   234.8197 \n2007   208.3844   213.0947   215.5979   219.8570   224.5975   229.4958   234.4669   237.6307   242.8859 \n2008   212.2717   217.3223   220.0521   224.7293   230.0136   235.7004   241.6218   245.6423   254.4127 \n2009   212.1537   217.8630   220.8943   226.1200   232.1722   238.8682   246.3096   251.9540   265.1036 \n\nMean Biomass  x       1000 MT\n\nYear       Average        StdDev\n2004      195.1458        5.3333\n2005      206.0696        5.8806\n2006      211.4024        6.4287\n2007      216.9493        7.1218\n2008      222.4861        8.3790\n2009      225.0471       10.1991\n\nMean Biomass Distribution\n\nYear       1%         5%         10%        25%        50%        75%        90%        95%        99%    \n2004   182.4411   186.3680   188.4693   191.4729   195.1343   198.6408   201.9259   204.3602   207.8469 \n2005   192.2976   196.4658   198.6699   202.0527   206.0414   209.8959   213.5926   216.1956   220.1596 \n2006   196.4374   200.8584   203.3081   207.0736   211.3400   215.5932   219.6988   222.4009   226.6468 \n2007   201.0939   205.6560   208.0465   212.1518   216.7343   221.4392   226.2450   229.2876   234.3949 \n2008   204.8011   209.7117   212.3378   216.8668   221.9600   227.4532   233.1969   237.0978   245.6776 \n2009   204.7867   210.2699   213.1971   218.2598   224.1077   230.5910   237.8015   243.2913   256.1328 \n\nCombined Catch Biomass  x       1000 MT\n\nYear       Average        StdDev\n2004        0.6798        0.0165\n2005        0.7000        0.0000\n2006        4.4690        0.1527\n2007        4.7193        0.1773\n2008        4.8199        0.1837\n2009        4.7281        0.1781\n\nCombined Catch Distribution\n\nYear       1%         5%         10%        25%        50%        75%        90%        95%        99%    \n2004     0.6412     0.6528     0.6582     0.6686     0.6804     0.6910     0.6998     0.7076     0.7181 \n2005     0.7000     0.7000     0.7000     0.7000     0.7000     0.7000     0.7000     0.7000     0.7000 \n2006     4.1055     4.2163     4.2773     4.3641     4.4707     4.5678     4.6673     4.7226     4.8303 \n2007     4.2937     4.4271     4.4985     4.5986     4.7187     4.8331     4.9489     5.0200     5.1365 \n2008     4.4001     4.5202     4.5918     4.6971     4.8173     4.9389     5.0572     5.1349     5.2584 \n2009     4.3327     4.4380     4.5063     4.6087     4.7229     4.8433     4.9632     5.0356     5.1588 \n\nLandings  x       1000 MT\n\nYear       Average        StdDev\n2004        0.6798        0.0165\n2005        0.7000        0.0000\n2006        4.4690        0.1527\n2007        4.7193        0.1773\n2008        4.8199        0.1837\n2009        4.7281        0.1781\n\nLandings Distribution\n\nYear       1%         5%         10%        25%        50%        75%        90%        95%        99%    \n2004     0.6412     0.6528     0.6582     0.6686     0.6804     0.6910     0.6998     0.7076     0.7181 \n2005     0.7000     0.7000     0.7000     0.7000     0.7000     0.7000     0.7000     0.7000     0.7000 \n2006     4.1055     4.2163     4.2773     4.3641     4.4707     4.5678     4.6673     4.7226     4.8303 \n2007     4.2937     4.4271     4.4985     4.5986     4.7187     4.8331     4.9489     5.0200     5.1365 \n2008     4.4001     4.5202     4.5918     4.6971     4.8173     4.9389     5.0572     5.1349     5.2584 \n2009     4.3327     4.4380     4.5063     4.6087     4.7229     4.8433     4.9632     5.0356     5.1588 \n\nTotal Fishing Mortality\n\nYear       Average        StdDev\n2004        0.0048        0.0000\n2005        0.0048        0.0001\n2006        0.0300        0.0000\n2007        0.0300        0.0000\n2008        0.0300        0.0000\n2009        0.0300        0.0000\n\nTotal Fishing Mortality Distribution\n\nYear       1%         5%         10%        25%        50%        75%        90%        95%        99%    \n2004     0.0048     0.0048     0.0048     0.0048     0.0048     0.0048     0.0048     0.0048     0.0048 \n2005     0.0045     0.0046     0.0047     0.0047     0.0048     0.0049     0.0050     0.0051     0.0052 \n2006     0.0300     0.0300     0.0300     0.0300     0.0300     0.0300     0.0300     0.0300     0.0300 \n2007     0.0300     0.0300     0.0300     0.0300     0.0300     0.0300     0.0300     0.0300     0.0300 \n2008     0.0300     0.0300     0.0300     0.0300     0.0300     0.0300     0.0300     0.0300     0.0300 \n2009     0.0300     0.0300     0.0300     0.0300     0.0300     0.0300     0.0300     0.0300     0.0300 \n\nProbability Spawning Stock Biomass Exceeds Threshold    236.700 (1000 MT)\n\nYear    Probability\n\n2004    0.000000\n2005    0.000000\n2006    0.000000\n2007    0.000000\n2008    0.000010\n2009    0.001950\n\nProbability Threshold Exceeded at Least Once =     0.0019\n\nProbability Total Fishing Mortality Exceeds Threshold     0.0400 \n\nYear    Probability\n\n2004    0.000000\n2005    0.000000\n2006    0.000000\n2007    0.000000\n2008    0.000000\n2009    0.000000\n\nProbability Threshold Exceeded at Least Once =     0.0000\n\n\nExample 2\nThe second example is a fishing mortality and landings quota projection for Gulf of Maine haddock with a PStar analysis in 2018. The time horizon is 2014-2020. The fishery is comprised of one fleet. This is PStar projection analysis with 1000 bootstraps and 10 simulations per bootstrap based on an ASAP stock assessment analysis. The model output shows that total allowable catch amounts in 2018 to produce probabilities of overfishing of 10%, 20%, 30%, 40% and 50% at the overfishing level ofF=0.35. The total allowable catches to produce overfishing probabilities of 10%, 20%, 30%, 40% and 50% are calculated to be 1780, 1998, 2176, 2332, and 2497 mt, respectively. The model output includes a stock summary of numbers at age and also outputs a percentile analysis for key outputs at the 90th percentile.\nRunning example 2 produces the following output:\nAGEPRO VERSION 4.2\n\nGoM haddock ASAP_final (1977-2011 recruitment)\n\nDate & Time of Run: 29 Dec 2017  14:19\n\nInput File Name:    C:\\Users\\Jon.Brodziak\\Documents\\AGEPRO\\Example2_2017-12-29_14-19-44\\Example2.INP\n\nFirst Age Class:                         1\nNumber of Age Classes:                   9\nNumber of Years in Projection:           7\nNumber of Fleets:                        1\nNumber of Recruitment Models:            1\nNumber of Bootstraps:                 1000\nNumber of Simulations:                  10\n\nBootstrap File Name:            C:\\Users\\Jon.Brodziak\\Documents\\AGEPRO\\Example2_2017-12-29_14-19-44\\Example2.BSN\n\nNumber of Feasible Solutions:      10000  of      10000 Realizations\n\nInput Harvest Scenario\n\nYear  Type         Value\n\n2014  Landings        500 \n2015  F-Mult       0.2000 \n2016  F-Mult       0.2000 \n2017  F-Mult       0.2000 \n2018  Removals       2497 \n2019  F-Mult       0.2000 \n2020  F-Mult       0.2000 \n\nRecruits        1000  Fish\n\nYear Class   Average        StdDev\n2014       2113.8225     2387.2409\n2015       2095.2435     2388.6322\n2016       2161.9981     2415.4853\n2017       2154.6634     2430.4964\n2018       2141.7581     2406.3266\n2019       2156.4185     2450.1039\n2020       2183.0481     2465.0965\n\nRecruits Distribution\n\nYear Class 1%         5%         10%        25%        50%        75%        90%        95%        99%    \n2014   150.1671   205.1791   227.5903   331.1452  1120.8200  2542.1990  6162.8810  6484.1110 11028.6100\n2015   149.3512   204.6887   228.6934   334.4683  1120.1820  2541.2640  6152.7080  6487.6110 11048.1000\n2016   154.2960   203.8387   225.7294   361.4124  1129.3905  2545.1890  6212.6520  6501.7350 10886.1000\n2017   152.0371   210.7372   232.7332   359.0538  1129.9945  2544.1510  6190.1710  6506.0160 11309.1700\n2018   153.6666   204.7484   227.5898   349.5553  1122.8935  2544.3130  6203.1390  6499.2570 11243.7600\n2019   152.0957   209.2503   231.1399   342.5836  1125.1445  2543.9000  6212.2790  6536.6520 11337.6800\n2020   150.5870   206.1237   230.0479   360.4650  1132.4435  2544.9890  6226.1050  6535.5360 11422.0900\n\nSpawning Stock Biomass  x       1000 MT\n\nYear       Average        StdDev\n2014        6.6153        1.5860\n2015       11.0899        2.9220\n2016       12.8636        3.4163\n2017       12.6038        3.2662\n2018       11.3916        3.0953\n2019        9.7421        3.0356\n2020        9.0292        2.7831\n\nSpawning Stock Biomass Distribution\n\nYear        1%         5%         10%        25%        50%        75%        90%        95%        99%   \n2014     3.5200     4.3275     4.7137     5.4851     6.4722     7.5894     8.7222     9.4729    10.9446 \n2015     5.4666     6.9514     7.6632     8.9364    10.7412    12.9279    14.9858    16.4572    19.3031 \n2016     6.4490     8.0138     8.8712    10.3627    12.4238    15.0340    17.4631    19.0611    22.6196 \n2017     6.5380     7.9215     8.7276    10.2139    12.2223    14.6496    17.0540    18.4992    21.5570 \n2018     5.6092     6.9035     7.6665     9.1293    11.0387    13.3430    15.5845    16.9557    19.8974 \n2019     4.0236     5.3269     6.0556     7.5435     9.4281    11.6586    13.8259    15.2291    17.8403 \n2020     3.8158     4.9913     5.6425     6.9951     8.7759    10.8012    12.7350    14.0313    16.5065 \n\nJAN-1 Stock Biomass  x       1000 MT\n\nYear       Average        StdDev\n2014       11.4167        2.9021\n2015       13.9657        3.6246\n2016       14.8968        3.8103\n2017       14.6414        3.6817\n2018       13.7025        3.4096\n2019       11.6265        3.4733\n2020       10.8758        3.2285\n\nJAN-1 Stock Biomass Distribution\n\nYear       1%         5%         10%        25%        50%        75%        90%        95%        99%    \n2014     5.8387     7.3015     8.0296     9.3083    11.0600    13.2142    15.2749    16.6707    19.5190 \n2015     7.1894     8.8204     9.7234    11.2971    13.5244    16.2526    18.8028    20.6046    24.1617 \n2016     7.7881     9.4605    10.4082    12.1233    14.4212    17.2943    20.0188    21.8708    25.6910 \n2017     7.7478     9.3316    10.2328    11.9419    14.2320    16.9148    19.6778    21.2949    24.6684 \n2018     7.2064     8.7307     9.5603    11.2420    13.3875    15.8500    18.2481    19.8581    22.8287 \n2019     4.9782     6.5211     7.4069     9.0983    11.3092    13.8388    16.3219    17.7958    20.9340 \n2020     4.7593     6.1337     6.9781     8.5232    10.5738    12.9143    15.2091    16.6590    19.4733 \n\nMean Biomass  x       1000 MT\n\nYear       Average        StdDev\n2014       13.5594        3.5654\n2015       15.0921        4.0054\n2016       15.3716        3.9588\n2017       14.6866        3.7276\n2018       12.9499        3.5927\n2019       11.4205        3.4391\n2020       10.7213        3.2607\n\nMean Biomass Distribution\n\nYear       1%         5%         10%        25%        50%        75%        90%        95%        99%    \n2014     6.7743     8.5594     9.4054    10.9301    13.1275    15.7951    18.3751    20.0235    23.4287 \n2015     7.5738     9.4465    10.3652    12.1587    14.5926    17.5658    20.4590    22.3897    26.2371 \n2016     7.9903     9.7496    10.6488    12.4953    14.9115    17.8132    20.7241    22.5648    26.2661 \n2017     7.6799     9.2810    10.1779    11.9493    14.2831    17.0375    19.6923    21.2855    24.9087 \n2018     6.1034     7.6719     8.5812    10.3214    12.6155    15.2101    17.6818    19.3861    22.5858 \n2019     4.9062     6.3754     7.2373     8.9247    11.0836    13.6122    15.9977    17.5320    20.7117 \n2020     4.6255     5.9719     6.7819     8.3407    10.4020    12.7506    15.0877    16.4991    19.5794 \n\nCombined Catch Biomass  x       1000 MT\n\nYear       Average        StdDev\n2014        0.5000        0.0000\n2015        0.8803        0.2338\n2016        1.1420        0.3043\n2017        1.4560        0.3947\n2018        2.4966        0.0000\n2019        1.3033        0.4176\n2020        1.2978        0.4060\n\nCombined Catch Distribution\n\nYear       1%         5%         10%        25%        50%        75%        90%        95%        99%    \n2014     0.5000     0.5000     0.5000     0.5000     0.5000     0.5000     0.5000     0.5000     0.5000 \n2015     0.4340     0.5427     0.6046     0.7113     0.8555     1.0264     1.1884     1.3045     1.5357 \n2016     0.5651     0.7098     0.7834     0.9215     1.1052     1.3265     1.5480     1.6929     1.9909 \n2017     0.7298     0.9039     0.9911     1.1700     1.4071     1.6944     1.9823     2.1726     2.6016 \n2018     2.4966     2.4966     2.4966     2.4966     2.4966     2.4966     2.4966     2.4966     2.4966 \n2019     0.5368     0.7012     0.8076     0.9984     1.2549     1.5584     1.8669     2.0601     2.4484 \n2020     0.5392     0.7114     0.8088     1.0025     1.2569     1.5518     1.8438     2.0309     2.3896 \n\nLandings  x       1000 MT\n\nYear       Average        StdDev\n2014        0.5000        0.0000\n2015        0.8803        0.2338\n2016        1.1420        0.3043\n2017        1.4560        0.3947\n2018        2.4966        0.0000\n2019        1.3033        0.4176\n2020        1.2978        0.4060\n\nLandings Distribution\n\nYear       1%         5%         10%        25%        50%        75%        90%        95%        99%    \n2014     0.5000     0.5000     0.5000     0.5000     0.5000     0.5000     0.5000     0.5000     0.5000 \n2015     0.4340     0.5427     0.6046     0.7113     0.8555     1.0264     1.1884     1.3045     1.5357 \n2016     0.5651     0.7098     0.7834     0.9215     1.1052     1.3265     1.5480     1.6929     1.9909 \n2017     0.7298     0.9039     0.9911     1.1700     1.4071     1.6944     1.9823     2.1726     2.6016 \n2018     2.4966     2.4966     2.4966     2.4966     2.4966     2.4966     2.4966     2.4966     2.4966 \n2019     0.5368     0.7012     0.8076     0.9984     1.2549     1.5584     1.8669     2.0601     2.4484 \n2020     0.5392     0.7114     0.8088     1.0025     1.2569     1.5518     1.8438     2.0309     2.3896 \n\nTotal Fishing Mortality\n\nYear       Average        StdDev\n2014        0.2105        0.0583\n2015        0.2000        0.0000\n2016        0.2000        0.0000\n2017        0.2000        0.0000\n2018        0.3687        0.1159\n2019        0.2000        0.0000\n2020        0.2000        0.0000\n\nTotal Fishing Mortality Distribution\n\nYear       1%         5%         10%        25%        50%        75%        90%        95%        99%    \n2014     0.1148     0.1340     0.1461     0.1696     0.2014     0.2412     0.2857     0.3139     0.3952 \n2015     0.2000     0.2000     0.2000     0.2000     0.2000     0.2000     0.2000     0.2000     0.2000 \n2016     0.2000     0.2000     0.2000     0.2000     0.2000     0.2000     0.2000     0.2000     0.2000 \n2017     0.2000     0.2000     0.2000     0.2000     0.2000     0.2000     0.2000     0.2000     0.2000 \n2018     0.1825     0.2189     0.2408     0.2860     0.3500     0.4296     0.5190     0.5799     0.7405 \n2019     0.2000     0.2000     0.2000     0.2000     0.2000     0.2000     0.2000     0.2000     0.2000 \n2020     0.2000     0.2000     0.2000     0.2000     0.2000     0.2000     0.2000     0.2000     0.2000 \n\nJAN-1 Stock Numbers at Age  -       1000  Fish\n\n2014\n\nAge        1%         5%         10%        25%        50%        75%        90%        95%        99%    \n1     1095.7400  1126.8200  1157.6700  1199.9000  1247.3900  1293.2100  1339.0500  1360.0600  1404.8700\n2     5815.7300  7232.0700  8377.4700 10215.8000 12906.8500 16274.7000 19489.5000 22076.3000 26764.3000\n3      605.2860   742.5500   868.7790  1068.1800  1346.6300  1645.2400  2021.1100  2259.3700  2788.3600\n4     1901.0200  2180.2500  2400.8400  2791.0000  3321.5800  3853.1700  4463.8300  4836.6200  5563.4700\n5      176.1790   213.9540   241.0530   284.5670   342.7900   418.2160   477.3430   529.6300   634.5340\n6       32.9855    41.5396    46.7232    56.6142    69.9137    88.1928   104.1120   118.6870   136.1660\n7       12.9987    16.9683    19.9008    24.6551    31.1685    38.9058    47.6952    55.4722    66.0063\n8       50.5496    64.3146    72.2744    89.3943   110.0280   133.9590   157.0870   170.5340   207.6260\n9+     103.9710   159.1740   182.0530   225.6940   284.1005   356.5180   433.8950   482.1760   567.9220\n\n2015\n\nAge        1%         5%         10%        25%        50%        75%        90%        95%        99%    \n1      150.1671   205.1791   227.5903   331.1452  1120.8200  2542.1990  6162.8810  6484.1110 11028.6100\n2      887.8562   922.5597   942.9964   979.3431  1019.9400  1061.2890  1100.2170  1123.0770  1160.5660\n3     4724.3670  5884.9600  6798.6190  8276.9970 10469.3300 13189.7300 15985.8800 18030.0100 21786.0300\n4      458.6349   579.8621   677.1247   832.9786  1056.4355  1303.7760  1602.3610  1814.0020  2236.2140\n5     1388.8850  1636.0870  1812.6300  2132.5230  2555.2555  2996.3000  3495.6230  3824.3460  4417.0360\n6      120.7904   150.2547   172.1194   206.6085   252.4803   312.3292   361.4383   400.4779   498.4812\n7       21.3308    27.8132    31.8572    39.5234    50.0190    63.7509    76.3860    88.3243   102.9572\n8        8.1611    11.0643    12.9375    16.8231    21.5830    27.4805    34.0739    39.6238    48.4185\n9+      99.1900   142.4742   166.3174   212.3172   272.2853   345.9320   425.8746   468.2724   564.1196\n\n2016\n\nAge        1%         5%         10%        25%        50%        75%        90%        95%        99%    \n1      149.3512   204.6887   228.6934   334.4683  1120.1820  2541.2640  6152.7080  6487.6110 11048.1000\n2      122.6079   167.5320   186.7238   270.6380   932.5010  2086.0260  5051.1580  5326.5060  9020.4290\n3      710.6238   743.4937   762.5140   792.6984   826.6821   862.4630   895.3975   913.9427   949.1091\n4     3699.5560  4632.8560  5342.0500  6523.0780  8265.4655 10393.9500 12573.6900 14252.8300 17146.8600\n5      353.6407   447.9320   522.2761   642.1836   814.4617  1004.5240  1234.6130  1397.6710  1723.4520\n6     1022.0040  1210.2630  1332.3580  1574.6600  1884.6520  2212.1540  2583.8580  2825.5160  3269.6370\n7       85.6311   107.2060   122.3344   147.0802   180.6755   222.8392   258.5840   286.6373   358.1803\n8       14.7620    19.2894    22.1592    27.4605    34.8072    44.3394    53.2656    61.4762    71.9711\n9+      76.3752   107.4038   125.3629   160.6426   205.1725   259.9684   318.5978   352.4900   422.2210\n\n2017\n\nAge        1%         5%         10%        25%        50%        75%        90%        95%        99%    \n1      154.2960   203.8387   225.7294   361.4124  1129.3905  2545.1890  6212.6520  6501.7350 10886.1000\n2      122.4453   166.9060   186.5583   273.5268   924.9599  2074.8450  5058.8330  5326.8450  9059.0880\n3       98.6721   135.7598   151.5422   218.5243   758.2042  1695.3800  4090.3880  4320.9590  7276.3590\n4      555.9447   583.0513   598.1129   623.8630   651.9622   681.2245   708.2104   724.4374   754.6333\n5     2851.8990  3580.1050  4117.6850  5024.5930  6371.6070  8004.3590  9689.6580 10972.1000 13239.3800\n6      261.0618   330.7912   384.8489   473.6005   600.6945   742.7213   913.8329  1037.5410  1277.2900\n7      726.6373   861.8317   950.5333  1123.4050  1341.5895  1577.9470  1845.7470  2020.5990  2342.8860\n8       59.3449    74.6039    85.0226   102.4041   125.6241   155.1049   180.6077   200.1796   252.7425\n9+      65.8990    89.2369   103.3606   131.8739   167.2694   209.3213   257.1538   283.2395   341.7310\n\n2018\n\nAge        1%         5%         10%        25%        50%        75%        90%        95%        99%    \n1      152.0371   210.7372   232.7332   359.0538  1129.9945  2544.1510  6190.1710  6506.0160 11309.1700\n2      125.9985   167.1557   185.6035   295.5600   935.4454  2097.9120  5084.9840  5334.7680  8852.2650\n3       99.7584   134.7766   152.1943   222.3991   751.9013  1685.2500  4105.3300  4336.8570  7370.9580\n4       78.4004   106.8737   119.8788   172.1859   597.7342  1338.5740  3226.9110  3417.3480  5798.7450\n5      424.1483   447.3210   459.3271   479.6160   502.7516   526.7769   548.9252   561.7752   586.3748\n6     2089.6800  2644.4020  3036.4550  3710.9630  4707.0140  5923.2100  7170.1380  8083.2790  9706.0750\n7      187.2364   235.6444   273.3657   337.6416   428.3732   530.8136   653.5985   742.1140   910.3953\n8      502.6856   601.8133   660.8785   780.8261   935.3516  1100.4240  1284.5000  1409.9500  1644.4540\n9+      88.7375   117.2458   132.9764   162.7726   203.1062   248.8700   296.8760   328.0390   390.5430\n\n2019\n\nAge        1%         5%         10%        25%        50%        75%        90%        95%        99%    \n1      153.6666   204.7484   227.5898   349.5553  1122.8935  2544.3130  6203.1390  6499.2570 11243.7600\n2      125.6385   171.2869   191.4572   293.4845   936.8988  2101.1120  5065.3120  5337.1690  9282.9010\n3      100.6454   133.9611   149.4112   239.4418   755.7065  1695.1120  4083.9320  4302.3260  7124.3410\n4       75.9471   101.6247   116.3168   169.1645   576.0969  1288.6220  3151.6090  3347.2970  5651.9420\n5       56.9325    77.0244    87.8735   126.1823   438.8362   990.5278  2389.8910  2567.0220  4265.1580\n6      241.0660   274.4351   290.0872   315.9705   342.6452   368.9478   392.5774   405.1795   430.8668\n7     1088.2510  1459.0940  1752.8150  2264.1170  3022.4015  3969.4200  4952.0780  5644.7680  6985.5020\n8       92.5160   126.7009   153.4395   200.6431   262.7260   334.9452   427.0272   493.7872   614.5672\n9+     249.7404   360.1757   416.3782   521.9749   661.7476   821.6150   987.4303  1108.2670  1319.1460\n\n2020\n\nAge        1%         5%         10%        25%        50%        75%        90%        95%        99%    \n1      152.0957   209.2503   231.1399   342.5836  1125.1445  2543.9000  6212.2790  6536.6520 11337.6800\n2      125.4417   168.1045   186.3815   286.0352   934.1904  2103.3390  5072.6260  5335.4040  9113.0580\n3      101.2067   138.5952   155.5509   238.0804   764.2864  1702.1790  4113.1280  4342.2010  7582.7920\n4       79.8333   105.2166   118.2490   189.0875   597.1814  1343.2180  3222.5690  3401.1950  5652.6620\n5       58.6316    78.3392    90.1692   130.4061   445.5383   997.0890  2427.3970  2591.6970  4376.1830\n6       41.8457    56.4963    64.9800    93.3839   324.2153   733.5625  1763.0560  1905.3330  3168.3210\n7      171.4524   195.2795   206.3613   224.8976   244.1048   263.1188   280.4399   289.7867   308.1276\n8      749.8229  1020.1310  1215.3620  1577.0540  2104.9460  2770.4520  3463.9650  3924.7230  4854.7490\n9+     244.0270   346.8155   405.7743   507.1333   642.8957   794.1324   959.9258  1070.2010  1260.2230\n\n\nRequested Percentile Report\n\nPercentile =    90.00 %\n\n                                 2014       2015       2016       2017       2018       2019       2020 \n\nRecruits                    6162.8810  6152.7080  6212.6520  6190.1710  6203.1390  6212.2790  6226.1050 \nSpawning Stock Biomass         8.7222    14.9858    17.4631    17.0540    15.5845    13.8259    12.7350 \nJan-1 Stock Biomass           15.2749    18.8028    20.0188    19.6778    18.2481    16.3219    15.2091 \nMean Biomass                  18.3751    20.4590    20.7241    19.6923    17.6818    15.9977    15.0877 \nCombined Catch Biomass         0.5000     1.1884     1.5480     1.9823     2.4966     1.8669     1.8438 \nLandings                       0.5000     1.1884     1.5480     1.9823     2.4966     1.8669     1.8438 \nFMort                          0.2857     0.2000     0.2000     0.2000     0.5190     0.2000     0.2000 \n\nStock Numbers at Age\nAge 1                       1339.0500  6162.8810  6152.7080  6212.6520  6190.1710  6203.1390  6212.2790 \nAge 2                      19489.5000  1100.2170  5051.1580  5058.8330  5084.9840  5065.3120  5072.6260 \nAge 3                       2021.1100 15985.8800   895.3975  4090.3880  4105.3300  4083.9320  4113.1280 \nAge 4                       4463.8300  1602.3610 12573.6900   708.2104  3226.9110  3151.6090  3222.5690 \nAge 5                        477.3430  3495.6230  1234.6130  9689.6580   548.9252  2389.8910  2427.3970 \nAge 6                        104.1120   361.4383  2583.8580   913.8329  7170.1380   392.5774  1763.0560 \nAge 7                         47.6952    76.3860   258.5840  1845.7470   653.5985  4952.0780   280.4399 \nAge 8                        157.0870    34.0739    53.2656   180.6077  1284.5000   427.0272  3463.9650 \nAge 9                        433.8950   425.8746   318.5978   257.1538   296.8760   987.4303   959.9258 \n\nPStar Summary Report\n\nOverfishing F =     0.3500   Target Year = 2018\n\n  PStar          TAC\n\n  0.1000         1780\n  0.2000         1998\n  0.3000         2176\n  0.4000         2332\n  0.5000         2497\n\n\nExample 3\nThe third example is a fishing mortality and landings quota projection for Gulf of Maine haddock with a rebuilding analysis for 2014-2020. The fishery is comprised of one fleet with process error in fishery selectivity. This is rebuilding projection with 1000 bootstraps and 10 simulations per bootstrap based on an ASAP stock assessment analysis. The model output shows the constant fishing mortality to rebuild the stock is \\(F_{REBUILD} = 0.045\\). The model output includes a stock summary of numbers at age and also outputs a percentile analysis for key outputs at the \\(90^{th}\\) percentile.\nRunning example 3 produces the following output:\nAGEPRO VERSION 4.2\n\nGoM haddock ASAP_final FREBUILD Projection\n\nDate & Time of Run: 29 Dec 2017  14:49\n\nInput File Name:    C:\\Users\\Jon.Brodziak\\Documents\\AGEPRO\\Example3_2017-12-29_14-49-07\\Example3.INP\n\nFirst Age Class:                         1\nNumber of Age Classes:                   9\nNumber of Years in Projection:           7\nNumber of Fleets:                        1\nNumber of Recruitment Models:            1\nNumber of Bootstraps:                 1000\nNumber of Simulations:                  10\n\nBootstrap File Name:            C:\\Users\\Jon.Brodziak\\Documents\\AGEPRO\\Example3_2017-12-29_14-49-07\\Example3.BSN\n\nNumber of Feasible Solutions:      10000  of      10000 Realizations\n\nInput Harvest Scenario\n\nYear  Type         Value\n\n2014  Landings        500 \n2015  F-Mult       0.3000 \n2016  F-Mult       0.3000 \n2017  F-Mult       0.3000 \n2018  F-Mult       0.3000 \n2019  F-Mult       0.3000 \n2020  F-Mult       0.3000 \n\nRecruits        1000  Fish\n\nYear Class   Average        StdDev\n2014       2170.8200     2441.8617\n2015       2144.2492     2416.6899\n2016       2150.4373     2418.5021\n2017       2077.7020     2359.7104\n2018       2169.2781     2458.9123\n2019       2146.2591     2453.9399\n2020       2109.8574     2409.5591\n\nRecruits Distribution\n\nYear Class 1%         5%         10%        25%        50%        75%        90%        95%        99%    \n2014   153.7521   208.0085   229.3621   347.0616  1132.0955  2545.3470  6225.6320  6522.2980 11133.4100\n2015   152.8537   207.5118   228.9794   352.4027  1126.1215  2542.6540  6181.5870  6500.1300 11200.0900\n2016   152.0864   205.9702   227.0639   334.5421  1120.9140  2544.0470  6196.3710  6505.2510 10864.6400\n2017   153.9306   204.6065   223.9934   335.6253  1120.2075  2541.6660  6154.7360  6491.9800 10947.3800\n2018   151.7663   206.4086   227.8564   353.3611  1136.3925  2544.5000  6227.9310  6534.0640 11412.9500\n2019   150.6260   205.4969   229.0507   342.5477  1120.8380  2543.5260  6205.1600  6521.0480 11515.9200\n2020   152.6280   209.8481   230.9342   348.8617  1120.4415  2541.6850  6179.7760  6495.6550 11322.8800\n\nSpawning Stock Biomass  x       1000 MT\n\nYear       Average        StdDev\n2014        6.6170        1.5864\n2015       11.2472        2.9734\n2016       13.6893        3.6225\n2017       14.2545        3.6743\n2018       14.2000        3.5843\n2019       13.8474        3.4929\n2020       13.5056        3.3958\n\nSpawning Stock Biomass Distribution\n\nYear        1%         5%         10%        25%        50%        75%        90%        95%        99%   \n2014     3.5078     4.3130     4.7139     5.4741     6.4677     7.5996     8.7246     9.5079    10.8959 \n2015     5.5792     7.0419     7.7295     9.0558    10.8637    13.1038    15.2164    16.6561    19.6792 \n2016     6.8389     8.5537     9.4430    11.0420    13.2202    15.9565    18.5612    20.2245    23.9665 \n2017     7.3671     8.9936     9.9199    11.6008    13.8159    16.5604    19.2488    20.9204    24.5266 \n2018     7.4340     9.0080     9.8747    11.5974    13.8368    16.4445    18.9478    20.6655    24.1175 \n2019     7.2135     8.7442     9.6034    11.3116    13.5319    16.0556    18.4609    20.0106    23.2609 \n2020     7.1247     8.5118     9.3369    11.0000    13.2158    15.6735    18.0730    19.5799    22.4662 \n\nJAN-1 Stock Biomass  x       1000 MT\n\nYear       Average        StdDev\n2014       11.4174        2.8996\n2015       13.9853        3.6385\n2016       15.5776        3.9671\n2017       16.1162        4.0252\n2018       16.0743        3.9486\n2019       15.7028        3.8651\n2020       15.3638        3.7809\n\nJAN-1 Stock Biomass Distribution\n\nYear       1%         5%         10%        25%        50%        75%        90%        95%        99%    \n2014     5.9561     7.3305     8.0160     9.3127    11.0570    13.2145    15.2783    16.6890    19.4895 \n2015     7.0768     8.8151     9.7325    11.3215    13.5287    16.2558    18.8747    20.6014    24.4138 \n2016     8.1564     9.8810    10.8909    12.7070    15.0950    18.1127    20.8555    22.7520    26.5054 \n2017     8.5564    10.2829    11.2717    13.1921    15.6896    18.6290    21.5091    23.3583    27.0562 \n2018     8.5860    10.3039    11.2642    13.1568    15.7288    18.5593    21.3129    23.1065    26.8372 \n2019     8.3366    10.0510    10.9747    12.8914    15.3734    18.1349    20.8302    22.5606    26.1722 \n2020     8.1237     9.7586    10.7283    12.5950    15.0481    17.7564    20.3938    22.0870    25.1322 \n\nMean Biomass  x       1000 MT\n\nYear       Average        StdDev\n2014       13.5499        3.5542\n2015       15.4331        4.0737\n2016       16.4904        4.2029\n2017       16.6939        4.1849\n2018       16.3128        4.0289\n2019       15.7412        3.9122\n2020       15.4252        3.8993\n\nMean Biomass Distribution\n\nYear       1%         5%         10%        25%        50%        75%        90%        95%        99%    \n2014     6.8296     8.5113     9.3948    10.9509    13.0968    15.7592    18.2887    20.0230    23.4237 \n2015     7.8519     9.6342    10.6250    12.5018    14.9013    17.9378    20.8969    22.8972    27.2031 \n2016     8.6093    10.4184    11.4735    13.4336    16.0525    19.1332    22.1543    24.0733    28.1761 \n2017     8.7683    10.6194    11.6720    13.6335    16.2788    19.3000    22.2328    24.2065    28.2042 \n2018     8.6469    10.3838    11.3612    13.3676    15.9913    18.8559    21.6646    23.4338    27.1640 \n2019     8.3179     9.9544    10.9414    12.8538    15.4182    18.2748    20.9306    22.6906    26.1512 \n2020     7.9700     9.6937    10.6649    12.5609    15.0972    17.9037    20.6399    22.3327    25.8592 \n\nCombined Catch Biomass  x       1000 MT\n\nYear       Average        StdDev\n2014        0.5000        0.0000\n2015        0.2016        0.0530\n2016        0.2789        0.0737\n2017        0.3796        0.1018\n2018        0.4419        0.1161\n2019        0.4422        0.1156\n2020        0.4748        0.1232\n\nCombined Catch Distribution\n\nYear       1%         5%         10%        25%        50%        75%        90%        95%        99%    \n2014     0.5000     0.5000     0.5000     0.5000     0.5000     0.5000     0.5000     0.5000     0.5000 \n2015     0.1003     0.1249     0.1392     0.1633     0.1963     0.2339     0.2728     0.2977     0.3469 \n2016     0.1394     0.1741     0.1925     0.2250     0.2708     0.3237     0.3775     0.4135     0.4824 \n2017     0.1914     0.2364     0.2608     0.3046     0.3669     0.4417     0.5168     0.5646     0.6686 \n2018     0.2283     0.2769     0.3047     0.3575     0.4290     0.5124     0.5971     0.6567     0.7565 \n2019     0.2287     0.2767     0.3051     0.3569     0.4295     0.5137     0.5978     0.6517     0.7612 \n2020     0.2444     0.2973     0.3263     0.3852     0.4629     0.5511     0.6407     0.6968     0.8046 \n\nLandings  x       1000 MT\n\nYear       Average        StdDev\n2014        0.5000        0.0000\n2015        0.2016        0.0530\n2016        0.2789        0.0737\n2017        0.3796        0.1018\n2018        0.4419        0.1161\n2019        0.4422        0.1156\n2020        0.4748        0.1232\n\nLandings Distribution\n\nYear       1%         5%         10%        25%        50%        75%        90%        95%        99%    \n2014     0.5000     0.5000     0.5000     0.5000     0.5000     0.5000     0.5000     0.5000     0.5000 \n2015     0.1003     0.1249     0.1392     0.1633     0.1963     0.2339     0.2728     0.2977     0.3469 \n2016     0.1394     0.1741     0.1925     0.2250     0.2708     0.3237     0.3775     0.4135     0.4824 \n2017     0.1914     0.2364     0.2608     0.3046     0.3669     0.4417     0.5168     0.5646     0.6686 \n2018     0.2283     0.2769     0.3047     0.3575     0.4290     0.5124     0.5971     0.6567     0.7565 \n2019     0.2287     0.2767     0.3051     0.3569     0.4295     0.5137     0.5978     0.6517     0.7612 \n2020     0.2444     0.2973     0.3263     0.3852     0.4629     0.5511     0.6407     0.6968     0.8046 \n\nTotal Fishing Mortality\n\nYear       Average        StdDev\n2014        0.2102        0.0578\n2015        0.0445        0.0000\n2016        0.0445        0.0000\n2017        0.0445        0.0000\n2018        0.0445        0.0000\n2019        0.0445        0.0000\n2020        0.0445        0.0000\n\nTotal Fishing Mortality Distribution\n\nYear       1%         5%         10%        25%        50%        75%        90%        95%        99%    \n2014     0.1162     0.1334     0.1462     0.1696     0.2015     0.2408     0.2839     0.3145     0.3851 \n2015     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445 \n2016     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445 \n2017     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445 \n2018     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445 \n2019     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445 \n2020     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445 \n\nJAN-1 Stock Numbers at Age  -       1000  Fish\n\n2014\n\nAge        1%         5%         10%        25%        50%        75%        90%        95%        99%    \n1     1095.7400  1126.8200  1157.6700  1199.9000  1247.3900  1293.2100  1339.0500  1360.0600  1404.8700\n2     5815.7300  7232.0700  8377.4700 10215.8000 12906.8500 16274.7000 19489.5000 22076.3000 26764.3000\n3      605.2860   742.5500   868.7790  1068.1800  1346.6300  1645.2400  2021.1100  2259.3700  2788.3600\n4     1901.0200  2180.2500  2400.8400  2791.0000  3321.5800  3853.1700  4463.8300  4836.6200  5563.4700\n5      176.1790   213.9540   241.0530   284.5670   342.7900   418.2160   477.3430   529.6300   634.5340\n6       32.9855    41.5396    46.7232    56.6142    69.9137    88.1928   104.1120   118.6870   136.1660\n7       12.9987    16.9683    19.9008    24.6551    31.1685    38.9058    47.6952    55.4722    66.0063\n8       50.5496    64.3146    72.2744    89.3943   110.0280   133.9590   157.0870   170.5340   207.6260\n9+     103.9710   159.1740   182.0530   225.6940   284.1005   356.5180   433.8950   482.1760   567.9220\n\n2015\n\nAge        1%         5%         10%        25%        50%        75%        90%        95%        99%    \n1      153.7521   208.0085   229.3621   347.0616  1132.0955  2545.3470  6225.6320  6522.2980 11133.4100\n2      886.9999   920.9055   944.3435   979.9522  1020.1620  1060.7430  1100.8560  1122.0680  1162.0630\n3     4740.6350  5881.5180  6788.0890  8280.2530 10437.9000 13190.6000 15924.2900 17940.1300 21772.2100\n4      462.1501   579.5480   678.5247   836.1118  1057.6295  1300.8420  1601.9910  1805.4510  2228.2810\n5     1402.6870  1632.0730  1811.3860  2130.7570  2557.1140  3001.1490  3490.7850  3797.3750  4431.1560\n6      121.0333   150.3102   172.2205   206.2701   252.2545   312.3252   361.8990   399.4688   500.4583\n7       21.2549    27.8869    31.7288    39.5810    50.0350    63.4947    76.4838    88.1371   102.7191\n8        8.1178    11.0340    12.9066    16.8518    21.5642    27.4360    34.0090    39.6686    48.5591\n9+      99.6480   143.0746   165.8811   212.3056   272.7287   345.4891   426.8521   469.6036   565.7290\n\n2016\n\nAge        1%         5%         10%        25%        50%        75%        90%        95%        99%    \n1      152.8537   207.5118   228.9794   352.4027  1126.1215  2542.6540  6181.5870  6500.1300 11200.0900\n2      125.6120   169.9832   187.3362   285.8009   935.7087  2106.8640  5088.4640  5358.8910  9065.7230\n3      717.8408   749.2020   767.2159   798.8983   833.9748   868.6385   901.6998   920.6849   957.7862\n4     3849.5580  4772.2030  5517.5350  6713.5670  8486.4350 10724.0600 12954.9300 14583.3900 17684.0800\n5      368.8452   470.1688   546.3981   674.9982   854.9253  1053.6940  1296.1080  1465.7940  1812.3090\n6     1112.4340  1304.3160  1447.6410  1703.7200  2044.2600  2402.5000  2796.6280  3037.7140  3551.5220\n7       95.8425   119.3594   136.5312   163.6895   200.5233   247.8007   287.8207   317.0682   397.7311\n8       16.6931    22.0278    25.0771    31.2594    39.5369    50.2574    60.4657    69.4576    81.1850\n9+      87.9257   122.3541   142.6734   181.7372   232.7070   294.7329   361.5172   399.8996   479.7186\n\n2017\n\nAge        1%         5%         10%        25%        50%        75%        90%        95%        99%    \n1      152.0864   205.9702   227.0639   334.5421  1120.9140  2544.0470  6196.3710  6505.2510 10864.6400\n2      124.9328   169.5370   187.5875   289.2126   936.7591  2082.4200  5059.7310  5330.1260  9139.4520\n3      102.7604   138.0878   153.3027   233.9465   767.8980  1732.9510  4159.4080  4386.5270  7358.2990\n4      578.2827   604.7967   621.0119   646.7345   676.8689   707.3514   734.5654   751.9041   781.6806\n5     3091.6750  3845.1700  4440.2080  5421.1320  6866.7700  8644.6120 10492.0100 11781.0100 14283.2900\n6      296.0683   374.3265   437.9340   540.8164   682.1429   842.5300  1037.5380  1173.8450  1454.1730\n7      879.9575  1036.5260  1146.0000  1352.4100  1621.8885  1915.9780  2223.3420  2419.6970  2822.7990\n8       75.7144    94.2965   107.6556   129.2856   158.5479   195.8338   227.5058   250.5553   316.8310\n9+      86.1764   115.7229   134.3767   170.3536   216.4243   270.1949   329.6626   363.0636   442.1880\n\n2018\n\nAge        1%         5%         10%        25%        50%        75%        90%        95%        99%    \n1      153.9306   204.6065   223.9934   335.6253  1120.2075  2541.6660  6154.7360  6491.9800 10947.3800\n2      124.3599   168.1019   186.5384   274.1155   933.7431  2097.5150  5068.9150  5351.9300  8980.8960\n3      102.6584   138.0619   153.2109   234.4648   768.2888  1705.2570  4137.6920  4376.4240  7491.3740\n4       83.0630   111.7923   125.1747   190.0386   624.9189  1406.8860  3375.8670  3580.8130  5996.0150\n5      463.1497   486.4656   499.5535   521.4975   546.8899   572.8059   596.2554   610.6294   636.2804\n6     2458.2110  3074.0040  3543.9720  4341.7510  5493.7480  6912.7910  8409.3140  9431.2870 11449.5100\n7      232.8949   297.6859   348.1032   429.2734   541.3385   669.5108   824.7090   932.7457  1149.7860\n8      693.9673   815.9270   903.8471  1069.8840  1279.5850  1510.4820  1752.6630  1913.4760  2242.3930\n9+     131.7504   172.7009   195.3063   239.6761   298.3704   363.7684   430.1583   479.6413   576.7128\n\n2019\n\nAge        1%         5%         10%        25%        50%        75%        90%        95%        99%    \n1      151.7663   206.4086   227.8564   353.3611  1136.3925  2544.5000  6227.9310  6534.0640 11412.9500\n2      126.1664   166.8946   184.0337   273.6497   926.2880  2074.8740  5060.7700  5321.2440  9009.6770\n3      101.1790   137.3052   152.7485   223.9679   764.1367  1718.8710  4145.2170  4387.6230  7300.6000\n4       83.1064   111.7158   124.8275   190.8343   624.4940  1389.5640  3365.4510  3567.1850  6061.0810\n5       67.4937    90.0772   101.2675   154.1486   505.3076  1142.8570  2726.6630  2894.6220  4833.3090\n6      367.9427   387.4575   398.0623   416.4294   437.2194   459.0043   478.4960   491.2420   512.2461\n7     1965.4640  2431.6780  2821.0370  3445.3130  4364.2560  5494.9360  6693.2650  7529.1950  9091.8490\n8      183.2299   234.7869   274.1439   339.3622   427.2745   529.8703   651.1502   737.6687   912.8956\n9+     645.5298   785.3057   869.6136  1034.7050  1242.1625  1464.2670  1703.0170  1862.6330  2167.4780\n\n2020\n\nAge        1%         5%         10%        25%        50%        75%        90%        95%        99%    \n1      150.6260   205.4969   229.0507   342.5477  1120.8380  2543.5260  6205.1600  6521.0480 11515.9200\n2      123.8571   167.9808   187.1525   289.8989   937.2894  2106.1880  5097.7430  5374.9480  9313.5090\n3      102.3573   135.9500   150.7452   222.9596   759.5409  1692.0840  4135.9360  4364.2630  7376.7490\n4       81.7678   111.0348   123.6390   182.1238   620.7917  1400.0710  3356.1290  3576.1200  5956.0300\n5       67.0329    89.8906   100.9146   154.5096   504.2604  1124.6640  2720.8110  2890.6500  4865.1570\n6       54.1054    71.9035    81.1756   123.2250   405.4597   915.6747  2177.4730  2329.5830  3886.8050\n7      290.4778   305.5871   315.3789   330.0894   347.1659   365.1161   381.6304   391.7124   410.2046\n8     1534.5130  1921.6320  2227.5890  2721.7010  3447.9955  4331.5540  5284.6800  5929.2270  7222.0580\n9+     695.9149   838.0460   934.9111  1101.1280  1328.9345  1555.9650  1818.6410  1978.0690  2310.0400\n\n\nRequested Percentile Report\n\nPercentile =    90.00 %\n\n                                 2014       2015       2016       2017       2018       2019       2020 \n\nRecruits                    6225.6320  6181.5870  6196.3710  6154.7360  6227.9310  6205.1600  6179.7760 \nSpawning Stock Biomass         8.7246    15.2164    18.5612    19.2488    18.9478    18.4609    18.0730 \nJan-1 Stock Biomass           15.2783    18.8747    20.8555    21.5091    21.3129    20.8302    20.3938 \nMean Biomass                  18.2887    20.8969    22.1543    22.2328    21.6646    20.9306    20.6399 \nCombined Catch Biomass         0.5000     0.2728     0.3775     0.5168     0.5971     0.5978     0.6407 \nLandings                       0.5000     0.2728     0.3775     0.5168     0.5971     0.5978     0.6407 \nFMort                          0.2839     0.0445     0.0445     0.0445     0.0445     0.0445     0.0445 \n\nStock Numbers at Age\nAge 1                       1339.0500  6225.6320  6181.5870  6196.3710  6154.7360  6227.9310  6205.1600 \nAge 2                      19489.5000  1100.8560  5088.4640  5059.7310  5068.9150  5060.7700  5097.7430 \nAge 3                       2021.1100 15924.2900   901.6998  4159.4080  4137.6920  4145.2170  4135.9360 \nAge 4                       4463.8300  1601.9910 12954.9300   734.5654  3375.8670  3365.4510  3356.1290 \nAge 5                        477.3430  3490.7850  1296.1080 10492.0100   596.2554  2726.6630  2720.8110 \nAge 6                        104.1120   361.8990  2796.6280  1037.5380  8409.3140   478.4960  2177.4730 \nAge 7                         47.6952    76.4838   287.8207  2223.3420   824.7090  6693.2650   381.6304 \nAge 8                        157.0870    34.0090    60.4657   227.5058  1752.6630   651.1502  5284.6800 \nAge 9                        433.8950   426.8521   361.5172   329.6626   430.1583  1703.0170  1818.6410"
  },
  {
    "objectID": "acknowledgments.html",
    "href": "acknowledgments.html",
    "title": "Acknowledgments",
    "section": "",
    "text": "Special thanks to Paul Rago and Chris Legault for their help in developing this modeling framework and software. Thanks also to Eric Fletcher for programming the graphical user interface, Alan Seaver for rewriting the AGEPRO module in the C language, and Laura Shulman for Fortran language support."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Beverton, Raymond J. H., and Sidney J. Holt. 1957. On the Dynamics\nof Exploited Fish Populations. Chapman; Hall, London. Facsmile\nReprint. Springer Netherlands. 1993. https://doi.org/10.1007/978-94-011-2106-4.\n\n\nBrodziak, Jon, P. J. Rago, and Ramon Conser. 1998. “A General\nApproach for Making Short-Term Stochastic Projections from an\nAge-Structured Fisheries Assessment Model,” January. https://doi.org/10.4027/fsam.1998.52.\n\n\nBrodziak, Jon, and P. Rago. Manuscript. 1994. “A General Approach\nfor Short-Term Stochastic Projections in Age-Structured Fisheries\nAssessment Models.” Manuscript. 1994.\n\n\nMohn, R. 1999. “The Retrospective Problem in Sequential Population\nAnalysis: An Investigation Using Cod Fishery and Simulated Data.”\nICES Journal of Marine Science 56 (4): 473–88. https://doi.org/10.1006/jmsc.1999.0481.\n\n\nNEFMC. 1996,. “Amendment 7 to the Northeast Multispecies Fishery\nManagement Plan.” Newburyport, MA.\n\n\nNew England Fishery Management Council [NEFMC]. 1994. “Amendment 5\nto the Northeast Multispecies Fishery Management Plan.”\nNewburyport, MA.\n\n\nNortheast Fisheries Science Center [NEFSC]. 1994. “Report of the\n18th Northeast Regional Stock Assessment Workshop. Stock Assessment\nReview Committee (SARC) Consensus Summary of Assessments.”\nNortheast Fisheries Science Center Reference Document ; 94-22. https://repository.library.noaa.gov/view/noaa/8551.\n\n\nQuinn II, Terrance J, and Richard B Deriso. 1999. Quantitative Fish\nDynamics. Oxford University PressNew York, NY. https://doi.org/10.1093/oso/9780195076318.001.0001.\n\n\nRicker, W. E. 1954. “Stock and Recruitment.” Journal of\nthe Fisheries Research Board of Canada 11 (5): 559–623. https://doi.org/10.1139/f54-039.\n\n\nShepherd, J. G. 1982. “A Versatile New Stock-Recruitment\nRelationship for Fisheries, and the Construction of Sustainable Yield\nCurves.” ICES Journal of Marine Science 40 (1): 67–75.\nhttps://doi.org/10.1093/icesjms/40.1.67."
  },
  {
    "objectID": "example1-inpfile.html",
    "href": "example1-inpfile.html",
    "title": "Example 1 Input File",
    "section": "",
    "text": "AGEPRO VERSION 4.0\n[CASEID]\nREDFISH - RECRUITMENT MODEL 14\n[GENERAL]\n2004 2009 1 26 100 2 1 0 49667890\n[BOOTSTRAP]\n1000 1000\nC:\\Users\\Jon.Brodziak\\Documents\\AGEPRO\\Example1_2017-12-29_13-58-58\\Example1.BSN\n[STOCK_WEIGHT]\n0 1\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001\n0.001 0.001 0.001 0.001 0.001 0.001\n[SSB_WEIGHT]\n0 1\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001\n0.001 0.001 0.001 0.001 0.001 0.001\n[MEAN_WEIGHT]\n0 1\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001\n0.001 0.001 0.001 0.001 0.001 0.001\n[CATCH_WEIGHT]\n0 1\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.01 0.02 0.059 0.099 0.145 0.178 0.201 0.25 0.272 0.31 0.348 0.391 0.423 0.429 0.463 0.495 0.503 0.508 0.548 0.558\n0.565 0.581 0.595 0.583 0.582 0.637\n0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001\n0.001 0.001 0.001 0.001 0.001 0.001\n0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001\n0.001 0.001 0.001 0.001 0.001 0.001\n[NATMORT]\n0 1\n0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05\n0.05 0.05\n0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05\n0.05 0.05\n0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05\n0.05 0.05\n0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05\n0.05 0.05\n0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05\n0.05 0.05\n0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05 0.05\n0.05 0.05\n0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1\n[BIOLOGICAL]\n0\n0.4\n0.4\n[MATURITY]\n0 1\n0.01 0.02 0.05 0.15 0.36 0.64 0.85 0.95 0.98 0.99 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0.01 0.02 0.05 0.15 0.36 0.64 0.85 0.95 0.98 0.99 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0.01 0.02 0.05 0.15 0.36 0.64 0.85 0.95 0.98 0.99 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0.01 0.02 0.05 0.15 0.36 0.64 0.85 0.95 0.98 0.99 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0.01 0.02 0.05 0.15 0.36 0.64 0.85 0.95 0.98 0.99 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0.01 0.02 0.05 0.15 0.36 0.64 0.85 0.95 0.98 0.99 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001\n0.001 0.001 0.001 0.001 0.001 0.001\n[FISHERY]\n0 1\n0 0.002 0.011 0.054 0.223 0.522 0.656 0.783 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0 0.002 0.011 0.054 0.223 0.522 0.656 0.783 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0 0.002 0.011 0.054 0.223 0.522 0.656 0.783 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0 0.002 0.011 0.054 0.223 0.522 0.656 0.783 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0 0.002 0.011 0.054 0.223 0.522 0.656 0.783 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0 0.002 0.011 0.054 0.223 0.522 0.656 0.783 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0 0.002 0.011 0.054 0.223 0.522 0.656 0.783 1 1 0.783 0.656 0.522 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n0 0.002 0.011 0.054 0.223 0.522 0.656 0.783 1 1 0.783 0.656 0.522 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n0 0.002 0.011 0.054 0.223 0.522 0.656 0.783 1 1 0.783 0.656 0.522 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n0 0.002 0.011 0.054 0.223 0.522 0.656 0.783 1 1 0.783 0.656 0.522 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n0 0.002 0.011 0.054 0.223 0.522 0.656 0.783 1 1 0.783 0.656 0.522 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n0 0.002 0.011 0.054 0.223 0.522 0.656 0.783 1 1 0.783 0.656 0.522 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5\n0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001\n0.001 0.001 0.001 0.001 0.001 0.001\n0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001 0.001\n0.001 0.001 0.001 0.001 0.001 0.001\n[RECRUIT]\n1000000 1 75\n14\n1\n1\n1\n1\n1\n1\n53\n73.5939 78.1845 70.6004 62.1267 66.0886 69.9814 49.9445 70.4022 42.6731 85.2977 48.2887 98.1364 76.867 33.8211 7.8195\n4.3288 2.6275 2.7917 4.2174 249.227 6.5051 2.5329 1.9038 1.7011 1.5596 2.2002 52.7585 2.4754 2.8037 10.179 21.2349\n8.6637 20.0313 11.1925 5.0913 4.3675 28.9894 51.3917 8.7334 35.7165 327.489 73.3318 35.0047 22.4337 24.9481 32.1726\n34.4703 29.245 81.7098 30.5807 25.3895 26.28 30.1793\n[HARVEST]\n0 1 0 0 0 0\n0.00239 350 0.01 0.01 0.01 0.01\n0.00239 350 0.02 0.02 0.02 0.02\n[REFPOINT]\n236700 0 0 0.04\n[OPTIONS]\n0 0 1"
  },
  {
    "objectID": "example2-inpfile.html",
    "href": "example2-inpfile.html",
    "title": "Example 2 Input File",
    "section": "",
    "text": "AGEPRO VERSION 4.0\n[CASEID]\nGoM haddock ASAP_final (1977-2011 recruitment)\n[GENERAL]\n2014  2020  1  9  10  1  1  0  854236\n[BOOTSTRAP]\n1000  1000\nC:\\Users\\Jon.Brodziak\\Documents\\AGEPRO\\Example2_2017-12-29_14-19-44\\Example2.BSN\n[STOCK_WEIGHT]\n0  0\n0.15  0.4  0.71  1  1.24  1.43  1.59  1.82  2.04\n0.14  0.13  0.07  0.05  0.03  0.03  0.08  0.03  0.04\n[SSB_WEIGHT]\n-1  0\n[MEAN_WEIGHT]\n0  0\n0.3  0.6  0.89  1.17  1.4  1.55  1.7  1.96  2.04\n0.14  0.11  0.11  0.06  0.05  0.05  0.05  0.07  0.04\n[CATCH_WEIGHT]\n-3  0\n[NATMORT]\n0  0\n0.2  0.2  0.2  0.2  0.2  0.2  0.2  0.2  0.2\n0.1  0.1  0.1  0.1  0.1  0.1  0.1  0.1  0.1\n[BIOLOGICAL]\n0\n0.25\n0.25\n[MATURITY]\n0  0\n0.04  0.28  0.81  0.98  1  1  1  1  1\n0.23  0.08  0.02  0.001  0.001  0.001  0.001  0.001  0.001\n[FISHERY]\n0  0\n0  0.05  0.19  0.3  0.52  0.69  0.82  1  0.83\n0.36  0.19  0.14  0.15  0.13  0.13  0.12  0.001  0.16\n[RECRUIT]\n1000  1000  50\n14\n1\n1\n1\n1\n1\n1\n1\n35\n5997  1476  6048  6435  4612  774  2445  1043  282  265  134  443  187  244  267  711  1318  2903  2540  1080  2179  2276  13429  2547  1121  1216  219  6281  386  1118  1218  215  301  966  6659\n[HARVEST]\n1  0  0  0  2  0  0\n500  0.2  0.2  0.2  500  0.2  0.2\n[PSTAR]\n5\n0.1  0.2  0.3  0.4  0.5\n0.35\n2018\n[BOUNDS]\n10  0.6\n[OPTIONS]\n1  0  0\n[SCALE]\n1000  1000  1000  \n[PERC]\n90"
  },
  {
    "objectID": "example3-inpfile.html",
    "href": "example3-inpfile.html",
    "title": "Example 3 Input File",
    "section": "",
    "text": "AGEPRO VERSION 4.0 \n[CASEID] \nGoM haddock ASAP_final FREBUILD Projection \n[GENERAL] \n2014  2020  1  9  10  1  1  0  30076 \n[BOOTSTRAP] \n1000  1000 \nC:\\Users\\Jon.Brodziak\\Documents\\AGEPRO\\Example3_2017-12-29_14-49-07\\Example3.BSN \n[STOCK_WEIGHT] \n0  0 \n0.15  0.4  0.71  1  1.24  1.43  1.59  1.82  2.04 \n0.14  0.13  0.07  0.05  0.03  0.03  0.08  0.03  0.04 \n[SSB_WEIGHT] \n-1  0 \n[MEAN_WEIGHT] \n0  0 \n0.3  0.6  0.89  1.17  1.4  1.55  1.7  1.96  2.04 \n0.14  0.11  0.11  0.06  0.05  0.05  0.05  0.07  0.04 \n[CATCH_WEIGHT] \n-3  0 \n[NATMORT] \n0  0 \n0.2  0.2  0.2  0.2  0.2  0.2  0.2  0.2  0.2 \n0.1  0.1  0.1  0.1  0.1  0.1  0.1  0.1  0.1 \n[BIOLOGICAL] \n0 \n0.25 \n0.25 \n[MATURITY] \n0  0 \n0.04  0.28  0.81  0.98  1  1  1  1  1 \n0.23  0.08  0.02  0.001  0.001  0.001  0.001  0.001  0.001 \n[FISHERY] \n0  0 \n0  0.05  0.19  0.3  0.52  0.69  0.82  1  0.83 \n0.36  0.19  0.14  0.15  0.13  0.13  0.12  0.001  0.16 \n[RECRUIT] \n1000  1000  50 \n14 \n1 \n1 \n1 \n1 \n1 \n1 \n1 \n35 \n5997  1476  6048  6435  4612  774  2445  1043  282  265  134  443  187  244  267  711  1318  2903  2540  1080  2179  2276  13429  2547  1121  1216  219  6281  386  1118  1218  215  301  966  6659 \n[HARVEST] \n1  0  0  0  0  0  0 \n500  0.3  0.3  0.3  0.3  0.3  0.3 \n[REBUILD] \n2020  11000  0  75 \n[BOUNDS] \n10  0.6 \n[OPTIONS] \n1  0  0 \n[SCALE] \n1000  1000  1000   \n[PERC] \n90"
  }
]